version: '3.8'

services:
  grafana:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mava-grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=${GRAFANA_PLUGINS:-grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel}
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_LOG_LEVEL=${GRAFANA_LOG_LEVEL:-info}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    networks:
      - grafana-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.mava.service=grafana"
      - "com.mava.description=Grafana dashboard service with prebuilt dashboards"

  # Optional: Add a sample metrics source (Prometheus)
  prometheus:
    image: prom/prometheus:latest
    container_name: mava-prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus-storage:/prometheus
    networks:
      - grafana-network
    profiles:
      - "with-prometheus"
    labels:
      - "com.mava.service=prometheus"
      - "com.mava.description=Prometheus metrics collection service"

networks:
  grafana-network:
    driver: bridge
    labels:
      - "com.mava.network=grafana"

volumes:
  grafana-storage:
    driver: local
    labels:
      - "com.mava.volume=grafana-data"
  prometheus-storage:
    driver: local
    labels:
      - "com.mava.volume=prometheus-data" 