{
  "id": null,
  "uid": "community-stats",
  "title": "Community Analytics Dashboard - Enhanced",
  "description": "Modern, enhanced community engagement and activity analytics with improved readability and visual design across Discord, Telegram, and Mava support systems",
  "tags": ["community", "analytics", "discord", "telegram", "mava", "engagement", "enhanced"],
  "timezone": "browser",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "style": "dark",
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": ["community"],
      "title": "View All Community Dashboards",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "weekStart": "",
  "panels": [
    {
      "id": 100,
      "title": "",
      "type": "text",
      "gridPos": {"h": 3, "w": 24, "x": 0, "y": 0},
      "options": {
        "mode": "html",
        "content": "<div style=\"text-align: center; padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 15px; margin-bottom: 20px;\">\n  <h1 style=\"color: white; font-size: 2.5em; margin: 0; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\">🚀 Community Analytics Hub</h1>\n  <p style=\"color: rgba(255,255,255,0.9); font-size: 1.2em; margin: 10px 0 0 0;\">Real-time insights across Discord & Telegram Communities</p>\n</div>"
      },
      "transparent": false
    },
    {
      "id": 1,
      "title": "📊 Discord Activity",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 6, "w": 6, "x": 0, "y": 3},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_messages FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 80,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5865F2",
                "value": null
              },
              {
                "color": "#4752C4",
                "value": 1000
              },
              {
                "color": "#3C45A5",
                "value": 5000
              },
              {
                "color": "#313687",
                "value": 10000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 2,
      "title": "💬 Telegram Activity",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 6, "w": 6, "x": 6, "y": 3},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_messages FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo();",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#0088CC",
                "value": null
              },
              {
                "color": "#006BA6",
                "value": 1000
              },
              {
                "color": "#004D80",
                "value": 5000
              },
              {
                "color": "#003359",
                "value": 10000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 3,
      "title": "👥 Active Discord Users",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 6, "w": 6, "x": 12, "y": 3},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(DISTINCT author_id) AS active_users FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5865F2",
                "value": null
              },
              {
                "color": "#4752C4",
                "value": 50
              },
              {
                "color": "#3C45A5",
                "value": 200
              },
              {
                "color": "#313687",
                "value": 500
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 4,
      "title": "👤 Active Telegram Users",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 6, "w": 6, "x": 18, "y": 3},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(DISTINCT from_user_id) AS active_users FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo();",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#0088CC",
                "value": null
              },
              {
                "color": "#006BA6",
                "value": 25
              },
              {
                "color": "#004D80",
                "value": 100
              },
              {
                "color": "#003359",
                "value": 300
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 5,
      "title": "📈 Activity Trends",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 9},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT date_trunc('day', created_at) AS time, 'Discord' as platform, COUNT(*) AS messages FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false GROUP BY time UNION ALL SELECT date_trunc('day', date) AS time, 'Telegram' as platform, COUNT(*) AS messages FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() GROUP BY time ORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 3,
            "fillOpacity": 20,
            "gradientMode": "hue",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "auto",
            "pointSize": 5,
            "stacking": {
              "mode": "none",
              "group": "A"
            },
            "axisPlacement": "auto",
            "axisLabel": "",
            "scaleDistribution": {
              "type": "linear"
            },
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Discord"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#5865F2"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Telegram"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#0088CC"
                }
              }
            ]
          }
        ]
      },
      "options": {
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        },
        "legend": {
          "calcs": ["lastNotNull", "max", "mean"],
          "displayMode": "table",
          "placement": "bottom"
        }
      }
    },
    {
      "id": 6,
      "title": "🏆 Top Community Champions - Discord",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 0, "y": 17},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH user_engagement AS (SELECT author_id, COALESCE(author_display_name, author_username) AS display_name, author_username, COALESCE(MAX(author_avatar_url), 'https://cdn.discordapp.com/embed/avatars/' || ((author_id::bigint >> 22) % 6) || '.png') AS avatar_url, COUNT(*) AS messages, COUNT(DISTINCT channel_id) AS channels, COUNT(DISTINCT DATE(created_at)) AS active_days, ROUND(AVG(LENGTH(content))::numeric, 1) AS avg_length, ROUND((COUNT(*) * 0.4 + COUNT(DISTINCT channel_id) * 2.0 + COUNT(DISTINCT DATE(created_at)) * 3.0 + AVG(LENGTH(content)) * 0.02)::numeric, 1) AS engagement_score FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false AND content IS NOT NULL GROUP BY author_id, author_display_name, author_username), ranked_users AS (SELECT *, ROW_NUMBER() OVER (ORDER BY engagement_score DESC) AS rank, CASE WHEN engagement_score >= 150 THEN '👑 Elite' WHEN engagement_score >= 80 THEN '🥇 Champion' WHEN engagement_score >= 40 THEN '🥈 Rising Star' WHEN engagement_score >= 20 THEN '🥉 Active' ELSE '🌟 Member' END AS tier FROM user_engagement) SELECT avatar_url as \"🖼️\", display_name as \"👤 Champion\", author_username as \"@Username\", messages as \"💬 Messages\", channels as \"📍 Channels\", active_days as \"📅 Days\", avg_length as \"📏 Avg Length\", engagement_score as \"⭐ Score\", tier as \"🏅 Tier\", rank as \"🏆 Rank\", author_id as \"UserID\" FROM ranked_users ORDER BY engagement_score DESC LIMIT 15;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "100%",
        "rowHeight": 80
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true,
            "align": "center"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "🖼️"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "@Username"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Profile",
                    "url": "https://discord.com/users/${__data.fields.UserID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#7289da"
                }
              },
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "⭐ Score"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "#fee2e2",
                      "value": null
                    },
                    {
                      "color": "#fef3c7",
                      "value": 20
                    },
                    {
                      "color": "#d1fae5",
                      "value": 40
                    },
                    {
                      "color": "#bfdbfe",
                      "value": 80
                    },
                    {
                      "color": "#e0e7ff",
                      "value": 150
                    }
                  ]
                }
              },
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🏅 Tier"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "🌟 Member": {
                        "color": "#f3f4f6",
                        "index": 0
                      },
                      "🥉 Active": {
                        "color": "#fed7aa",
                        "index": 1
                      },
                      "🥈 Rising Star": {
                        "color": "#e5e7eb",
                        "index": 2
                      },
                      "🥇 Champion": {
                        "color": "#fef3c7",
                        "index": 3
                      },
                      "👑 Elite": {
                        "color": "#e0e7ff",
                        "index": 4
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 110
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🏆 Rank"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 60
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#f59e0b"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UserID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "👤 Champion"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          }
        ]
      }
    },
    {
      "id": 7,
      "title": "🏆 Top Community Champions - Telegram",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 12, "y": 17},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH user_engagement AS (SELECT from_user_id, COALESCE(NULLIF(TRIM(from_user_first_name || ' ' || COALESCE(from_user_last_name, '')), ''), from_user_first_name, from_user_username, 'Unknown') AS display_name, COALESCE(from_user_username, 'N/A') AS username, COUNT(*) AS messages, COUNT(DISTINCT chat_id) AS chats, COUNT(DISTINCT DATE(date)) AS active_days, ROUND(AVG(LENGTH(text))::numeric, 1) AS avg_length, ROUND((COUNT(*) * 0.4 + COUNT(DISTINCT chat_id) * 2.0 + COUNT(DISTINCT DATE(date)) * 3.0 + AVG(LENGTH(text)) * 0.02)::numeric, 1) AS engagement_score FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() AND COALESCE(from_user_is_bot, false) = false AND text IS NOT NULL GROUP BY from_user_id, from_user_first_name, from_user_last_name, from_user_username), ranked_users AS (SELECT *, ROW_NUMBER() OVER (ORDER BY engagement_score DESC) AS rank, CASE WHEN engagement_score >= 150 THEN '👑 Elite' WHEN engagement_score >= 80 THEN '🥇 Champion' WHEN engagement_score >= 40 THEN '🥈 Rising Star' WHEN engagement_score >= 20 THEN '🥉 Active' ELSE '🌟 Member' END AS tier FROM user_engagement) SELECT COALESCE(tu.avatar_url, 'https://ui-avatars.com/api/?name=' || REPLACE(ru.display_name, ' ', '+') || '&size=80&background=0088CC&color=ffffff&bold=true') as \"🖼️\", ru.display_name as \"👤 Champion\", ru.username as \"@Username\", ru.messages as \"💬 Messages\", ru.chats as \"🗨️ Chats\", ru.active_days as \"📅 Days\", ru.avg_length as \"📏 Avg Length\", ru.engagement_score as \"⭐ Score\", ru.tier as \"🏅 Tier\", ru.rank as \"🏆 Rank\", ru.from_user_id as \"UserID\" FROM ranked_users ru LEFT JOIN telegram_users tu ON ru.from_user_id = tu.user_id ORDER BY ru.engagement_score DESC LIMIT 15;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "100%",
        "rowHeight": 80
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true,
            "align": "center"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "🖼️"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "@Username"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Profile",
                    "url": "https://t.me/${__data.fields.Username}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#0088CC"
                }
              },
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "⭐ Score"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "#fee2e2",
                      "value": null
                    },
                    {
                      "color": "#fef3c7",
                      "value": 20
                    },
                    {
                      "color": "#d1fae5",
                      "value": 40
                    },
                    {
                      "color": "#bfdbfe",
                      "value": 80
                    },
                    {
                      "color": "#e0e7ff",
                      "value": 150
                    }
                  ]
                }
              },
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🏅 Tier"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "🌟 Member": {
                        "color": "#f3f4f6",
                        "index": 0
                      },
                      "🥉 Active": {
                        "color": "#fed7aa",
                        "index": 1
                      },
                      "🥈 Rising Star": {
                        "color": "#e5e7eb",
                        "index": 2
                      },
                      "🥇 Champion": {
                        "color": "#fef3c7",
                        "index": 3
                      },
                      "👑 Elite": {
                        "color": "#e0e7ff",
                        "index": 4
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 110
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🏆 Rank"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 60
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#f59e0b"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UserID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "👤 Champion"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          }
        ]
      }
    },
    {
      "id": 11,
      "title": "🔥 Trending Topics - Discord",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 29},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH words AS (SELECT unnest(string_to_array(lower(regexp_replace(content, '[^a-zA-Z0-9\\s]', '', 'g')), ' ')) AS word FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false AND content IS NOT NULL AND content <> '' AND LENGTH(content) > 3), filtered_words AS (SELECT word FROM words WHERE LENGTH(word) > 3 AND word NOT IN ('this', 'that', 'with', 'have', 'will', 'from', 'they', 'been', 'were', 'said', 'each', 'which', 'their', 'what', 'about', 'would', 'there', 'could', 'more', 'very', 'than', 'just', 'like', 'only', 'into', 'over', 'also', 'back', 'after', 'use', 'two', 'how', 'our', 'work', 'first', 'well', 'way', 'even', 'new', 'want', 'because', 'any', 'these', 'give', 'day', 'most', 'us', 'automod', 'blocked', 'analysis', 'scam', 'banned', 'indicates', 'aliases', 'message', 'user', 'https', 'discord', 'help', 'thanks', 'good', 'much', 'make', 'think', 'know', 'here', 'when', 'where', 'does', 'done', 'some', 'many', 'sure')) SELECT '🔥 ' || word AS \"📝 Topic\", COUNT(*) AS \"🔢 Mentions\" FROM filtered_words GROUP BY word ORDER BY COUNT(*) DESC LIMIT 15;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlYlRd"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "displayMode": "list",
            "filterable": false,
            "showUnfilled": true
          }
        },
        "overrides": []
      },
      "options": {
        "orientation": "horizontal",
        "displayMode": "gradient",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0,
        "showValue": "always",
        "groupWidth": 0.8,
        "barWidth": 0.95
      }
    },
    {
      "id": 12,
      "title": "🔥 Trending Topics - Telegram",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 29},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH words AS (SELECT unnest(string_to_array(lower(regexp_replace(text, '[^a-zA-Z0-9\\s]', '', 'g')), ' ')) AS word FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() AND text IS NOT NULL AND text <> '' AND LENGTH(text) > 3), filtered_words AS (SELECT word FROM words WHERE LENGTH(word) > 3 AND word NOT IN ('this', 'that', 'with', 'have', 'will', 'from', 'they', 'been', 'were', 'said', 'each', 'which', 'their', 'what', 'about', 'would', 'there', 'could', 'more', 'very', 'than', 'just', 'like', 'only', 'into', 'over', 'also', 'back', 'after', 'use', 'two', 'how', 'our', 'work', 'first', 'well', 'way', 'even', 'new', 'want', 'because', 'any', 'these', 'give', 'day', 'most', 'us', 'https', 'telegram', 'help', 'thanks', 'good', 'much', 'make', 'think', 'know', 'here', 'when', 'where', 'does', 'done', 'some', 'many', 'sure')) SELECT '💬 ' || word AS \"📝 Topic\", COUNT(*) AS \"🔢 Mentions\" FROM filtered_words GROUP BY word ORDER BY COUNT(*) DESC LIMIT 15;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "displayMode": "list",
            "filterable": false,
            "showUnfilled": true
          }
        },
        "overrides": []
      },
      "options": {
        "orientation": "horizontal",
        "displayMode": "gradient",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0,
        "showValue": "always",
        "groupWidth": 0.8,
        "barWidth": 0.95
      }
    },
    {
      "id": 13,
      "title": "🌍 Community Activity Heatmap",
      "type": "heatmap",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 37},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH hourly_activity AS (SELECT EXTRACT(HOUR FROM created_at) AS hour, EXTRACT(DOW FROM created_at) AS dow, COUNT(*) AS message_count FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false GROUP BY hour, dow UNION ALL SELECT EXTRACT(HOUR FROM date) AS hour, EXTRACT(DOW FROM date) AS dow, COUNT(*) AS message_count FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() GROUP BY hour, dow) SELECT hour, CASE dow WHEN 0 THEN 'Sunday' WHEN 1 THEN 'Monday' WHEN 2 THEN 'Tuesday' WHEN 3 THEN 'Wednesday' WHEN 4 THEN 'Thursday' WHEN 5 THEN 'Friday' WHEN 6 THEN 'Saturday' END AS day_of_week, SUM(message_count) AS total_messages FROM hourly_activity GROUP BY hour, dow, day_of_week ORDER BY dow, hour;",
          "refId": "A"
        }
      ],
      "options": {
        "calculate": false,
        "calculation": {},
        "cellGap": 2,
        "cellRadius": 5,
        "cellValues": {},
        "color": {
          "exponent": 0.5,
          "fill": "#667eea",
          "mode": "spectrum",
          "reverse": false,
          "scale": "exponential",
          "scheme": "Turbo",
          "steps": 256
        },
        "exemplars": {
          "color": "rgba(255,0,255,0.7)"
        },
        "filterValues": {
          "le": 1e-9
        },
        "legend": {
          "show": true
        },
        "rowsFrame": {
          "layout": "auto"
        },
        "tooltip": {
          "show": true,
          "yHistogram": false
        },
        "yAxis": {
          "axisLabel": "Day of Week",
          "axisPlacement": "left",
          "reverse": false,
          "unit": "short"
        }
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 14,
      "title": "📝 Recent Messages - Discord",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 0, "y": 29},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COALESCE(dm.author_avatar_url, 'https://cdn.discordapp.com/embed/avatars/' || ((dm.author_id::bigint >> 22) % 6) || '.png') AS \"🖼️\", COALESCE(dm.author_display_name, dm.author_username) AS \"👤 Author\", SUBSTRING(dm.content, 1, 100) || CASE WHEN LENGTH(dm.content) > 100 THEN '...' ELSE '' END AS \"💬 Message\", TO_CHAR(dm.created_at, 'MM/DD HH24:MI') AS \"🕐 Time\", dm.author_id AS \"AuthorID\", dm.id AS \"MessageID\", dm.channel_id AS \"ChannelID\" FROM discord_messages dm LEFT JOIN discord_channels dc ON dm.channel_id = dc.channel_id WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() AND dm.author_is_bot = false AND dm.content IS NOT NULL AND dm.content <> '' AND dc.name IS NOT NULL AND dc.name <> '' ORDER BY dm.created_at DESC LIMIT 30;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "90%",
        "rowHeight": 60
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true,
            "align": "left"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "🖼️"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 60
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "👤 Author"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Profile",
                    "url": "https://discord.com/users/${__data.fields.AuthorID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#7289da"
                }
              },
              {
                "id": "custom.width",
                "value": 96
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "💬 Message"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Message",
                    "url": "https://discord.com/channels/1063532490829598760/${__data.fields.ChannelID}/${__data.fields.MessageID}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🕐 Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "AuthorID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MessageID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ChannelID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      }
    },
    {
      "id": 15,
      "title": "📝 Recent Messages - Telegram",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 12, "y": 29},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COALESCE(tu.avatar_url, 'https://ui-avatars.com/api/?name=' || COALESCE(tm.from_user_first_name, '') || '+' || COALESCE(tm.from_user_last_name, '') || '&size=60&background=0088CC&color=ffffff&bold=true') AS \"🖼️\", COALESCE(NULLIF(TRIM(tm.from_user_first_name || ' ' || COALESCE(tm.from_user_last_name, '')), ''), tm.from_user_first_name, tm.from_user_username, 'Unknown') AS \"👤 Author\", SUBSTRING(tm.text, 1, 100) || CASE WHEN LENGTH(tm.text) > 100 THEN '...' ELSE '' END AS \"💬 Message\", TO_CHAR(tm.date, 'MM/DD HH24:MI') AS \"🕐 Time\", COALESCE(tm.from_user_username, 'N/A') AS \"Username\", tm.message_id AS \"MessageID\", tm.chat_id AS \"ChatID\" FROM telegram_messages tm LEFT JOIN telegram_users tu ON tm.from_user_id = tu.user_id WHERE tm.date >= $__timeFrom() AND tm.date <= $__timeTo() AND COALESCE(tm.from_user_is_bot, false) = false AND tm.text IS NOT NULL AND tm.text <> '' ORDER BY tm.date DESC LIMIT 30;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "90%",
        "rowHeight": 60
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true,
            "align": "left"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "🖼️"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 60
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "👤 Author"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Profile",
                    "url": "https://t.me/${__data.fields.Username}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#0088CC"
                }
              },
              {
                "id": "custom.width",
                "value": 96
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "💬 Message"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Message",
                    "url": "https://t.me/c/${__data.fields.ChatID}/${__data.fields.MessageID}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🕐 Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Username"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MessageID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ChatID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      }
    },
    {
      "id": 16,
      "title": "🔍 Message Explorer - Discord",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 15, "w": 12, "x": 0, "y": 42},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COALESCE(dm.author_avatar_url, 'https://cdn.discordapp.com/embed/avatars/' || ((dm.author_id::bigint >> 22) % 6) || '.png') AS \"🖼️\", COALESCE(dm.author_display_name, dm.author_username) AS \"👤 Author\", SUBSTRING(dm.content, 1, 150) || CASE WHEN LENGTH(dm.content) > 150 THEN '...' ELSE '' END AS \"💬 Message\", TO_CHAR(dm.created_at, 'YYYY-MM-DD HH24:MI') AS \"🕐 Time\", dc.name AS \"📍 Channel\", dm.author_id AS \"AuthorID\", dm.id AS \"MessageID\", dm.channel_id AS \"ChannelID\" FROM discord_messages dm LEFT JOIN discord_channels dc ON dm.channel_id = dc.channel_id WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() AND dm.author_is_bot = false AND dm.content IS NOT NULL AND dm.content <> '' AND dc.name IS NOT NULL AND dc.name <> '' AND ('$discord_author' = 'All' OR COALESCE(dm.author_display_name, dm.author_username) = '$discord_author') AND ('$keyword_search' = '' OR LOWER(dm.content) LIKE LOWER('%$keyword_search%')) ORDER BY dm.created_at DESC LIMIT 500;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "90%",
        "rowHeight": 65
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true,
            "align": "left"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "🖼️"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 50
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "👤 Author"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Profile",
                    "url": "https://discord.com/users/${__data.fields.AuthorID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#7289da"
                }
              },
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "💬 Message"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Message",
                    "url": "https://discord.com/channels/1063532490829598760/${__data.fields.ChannelID}/${__data.fields.MessageID}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🕐 Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 90
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "📍 Channel"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Channel",
                    "url": "https://discord.com/channels/1063532490829598760/${__data.fields.ChannelID}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "AuthorID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MessageID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ChannelID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      }
    },
    {
      "id": 17,
      "title": "🔍 Message Explorer - Telegram",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 15, "w": 12, "x": 12, "y": 42},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COALESCE(tu.avatar_url, 'https://ui-avatars.com/api/?name=' || COALESCE(tm.from_user_first_name, '') || '+' || COALESCE(tm.from_user_last_name, '') || '&size=50&background=0088CC&color=ffffff&bold=true') AS \"🖼️\", COALESCE(NULLIF(TRIM(tm.from_user_first_name || ' ' || COALESCE(tm.from_user_last_name, '')), ''), tm.from_user_first_name, tm.from_user_username, 'Unknown') AS \"👤 Author\", SUBSTRING(tm.text, 1, 150) || CASE WHEN LENGTH(tm.text) > 150 THEN '...' ELSE '' END AS \"💬 Message\", TO_CHAR(tm.date, 'YYYY-MM-DD HH24:MI') AS \"🕐 Time\", COALESCE(tm.from_user_username, 'N/A') AS \"Username\", tm.message_id AS \"MessageID\", tm.chat_id AS \"ChatID\" FROM telegram_messages tm LEFT JOIN telegram_users tu ON tm.from_user_id = tu.user_id WHERE tm.date >= $__timeFrom() AND tm.date <= $__timeTo() AND COALESCE(tm.from_user_is_bot, false) = false AND tm.text IS NOT NULL AND tm.text <> '' AND ('$telegram_author' = 'All' OR COALESCE(NULLIF(TRIM(tm.from_user_first_name || ' ' || COALESCE(tm.from_user_last_name, '')), ''), tm.from_user_first_name, tm.from_user_username) = '$telegram_author') AND ('$keyword_search' = '' OR LOWER(tm.text) LIKE LOWER('%$keyword_search%')) ORDER BY tm.date DESC LIMIT 500;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "90%",
        "rowHeight": 65
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true,
            "align": "left"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "🖼️"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 50
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "👤 Author"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Profile",
                    "url": "https://t.me/${__data.fields.Username}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#0088CC"
                }
              },
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "💬 Message"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Message",
                    "url": "https://t.me/c/${__data.fields.ChatID}/${__data.fields.MessageID}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "🕐 Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 90
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Username"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MessageID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ChatID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      }
    },
    {
      "id": 999,
      "title": "",
      "type": "text",
      "gridPos": {"h": 1, "w": 24, "x": 0, "y": 57},
      "options": {
        "mode": "html",
        "content": "<style>\n/* Enhanced Modern Dashboard Styling */\n\n/* Global Background */\n.main-view {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%) !important;\n  min-height: 100vh !important;\n}\n\n/* Enhanced Panel Styling */\n.panel-container {\n  background: rgba(255, 255, 255, 0.12) !important;\n  backdrop-filter: blur(20px) !important;\n  border-radius: 20px !important;\n  border: 1px solid rgba(255, 255, 255, 0.25) !important;\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15) !important;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;\n}\n\n.panel-container:hover {\n  transform: translateY(-3px) !important;\n  box-shadow: 0 16px 50px rgba(0, 0, 0, 0.2) !important;\n  background: rgba(255, 255, 255, 0.18) !important;\n}\n\n/* Enhanced Table Styling */\n.table-panel {\n  background: rgba(255, 255, 255, 0.08) !important;\n  backdrop-filter: blur(25px) !important;\n  border-radius: 16px !important;\n  overflow: hidden !important;\n}\n\n/* Table Headers */\n.table-panel thead th {\n  background: linear-gradient(90deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  color: #ffffff !important;\n  font-weight: 600 !important;\n  text-transform: uppercase !important;\n  letter-spacing: 0.5px !important;\n  font-size: 0.9em !important;\n  padding: 16px 12px !important;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.2) !important;\n}\n\n/* Table Rows */\n.table-panel tbody tr {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1) !important;\n  transition: all 0.2s ease !important;\n}\n\n.table-panel tbody tr:hover {\n  background: rgba(255, 255, 255, 0.1) !important;\n  transform: scale(1.01) !important;\n}\n\n/* Table Cells */\n.table-panel tbody td {\n  padding: 14px 12px !important;\n  vertical-align: middle !important;\n  color: rgba(255, 255, 255, 0.9) !important;\n  font-size: 0.95em !important;\n}\n\n/* Enhanced Link Styling */\n.table-panel a {\n  color: #93c5fd !important;\n  text-decoration: none !important;\n  font-weight: 500 !important;\n  transition: all 0.2s ease !important;\n  border-radius: 6px !important;\n  padding: 4px 8px !important;\n}\n\n.table-panel a:hover {\n  color: #bfdbfe !important;\n  background: rgba(147, 197, 253, 0.1) !important;\n  transform: translateY(-1px) !important;\n}\n\n/* Avatar Images */\n.table-panel img {\n  width: 50px !important;\n  height: 50px !important;\n  border-radius: 50% !important;\n  border: 2px solid rgba(255, 255, 255, 0.3) !important;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2) !important;\n  transition: all 0.3s ease !important;\n}\n\n.table-panel img:hover {\n  transform: scale(1.1) !important;\n  border-color: rgba(255, 255, 255, 0.6) !important;\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3) !important;\n}\n\n/* Enhanced Stat Panels */\n.stat-panel {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%) !important;\n  backdrop-filter: blur(20px) !important;\n  border-radius: 20px !important;\n  border: 1px solid rgba(255, 255, 255, 0.25) !important;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1) !important;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;\n  overflow: hidden !important;\n}\n\n.stat-panel:hover {\n  transform: translateY(-4px) scale(1.02) !important;\n  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2) !important;\n}\n\n.stat-panel::before {\n  content: '' !important;\n  position: absolute !important;\n  top: 0 !important;\n  left: 0 !important;\n  width: 100% !important;\n  height: 100% !important;\n  background: linear-gradient(45deg, transparent 49%, rgba(255, 255, 255, 0.1) 50%, transparent 51%) !important;\n  opacity: 0 !important;\n  transition: opacity 0.3s ease !important;\n}\n\n.stat-panel:hover::before {\n  opacity: 1 !important;\n}\n\n/* Enhanced Chart Panels */\n.time-series-panel, .barchart-panel, .piechart-panel {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.02) 100%) !important;\n  backdrop-filter: blur(25px) !important;\n  border-radius: 18px !important;\n  border: 1px solid rgba(255, 255, 255, 0.2) !important;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12) !important;\n}\n\n/* Enhanced Panel Headers */\n.panel-header {\n  background: linear-gradient(90deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%) !important;\n  backdrop-filter: blur(10px) !important;\n  border-radius: 16px 16px 0 0 !important;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.15) !important;\n  color: #ffffff !important;\n  font-weight: 600 !important;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3) !important;\n}\n\n/* Enhanced Scrollbars */\n::-webkit-scrollbar {\n  width: 10px !important;\n  height: 10px !important;\n}\n\n::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05) !important;\n  border-radius: 12px !important;\n  margin: 4px !important;\n}\n\n::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.1)) !important;\n  border-radius: 12px !important;\n  border: 2px solid transparent !important;\n  background-clip: content-box !important;\n  transition: all 0.2s ease !important;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.2)) !important;\n}\n\n/* Enhanced Typography */\n.panel-title {\n  font-weight: 700 !important;\n  font-size: 1.1em !important;\n  color: #ffffff !important;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;\n  letter-spacing: 0.5px !important;\n}\n\n/* Enhanced Focus States */\n.table-panel tbody tr:focus-within {\n  background: rgba(255, 255, 255, 0.15) !important;\n  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.3) !important;\n  border-radius: 8px !important;\n}\n\n/* Enhanced Animation */\n@keyframes shimmer {\n  0% { transform: translateX(-100%); }\n  100% { transform: translateX(100%); }\n}\n\n.panel-container::after {\n  content: '' !important;\n  position: absolute !important;\n  top: 0 !important;\n  left: -100% !important;\n  width: 100% !important;\n  height: 100% !important;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent) !important;\n  animation: shimmer 3s infinite !important;\n  pointer-events: none !important;\n}\n\n/* Enhanced Mobile Responsiveness */\n@media (max-width: 768px) {\n  .table-panel img {\n    width: 40px !important;\n    height: 40px !important;\n  }\n  \n  .table-panel tbody td {\n    padding: 10px 8px !important;\n    font-size: 0.9em !important;\n  }\n  \n  .panel-container {\n    border-radius: 12px !important;\n    margin: 8px !important;\n  }\n}\n\n/* Enhanced Accessibility */\n.table-panel [role=\"button\"]:focus,\n.table-panel a:focus {\n  outline: 2px solid #93c5fd !important;\n  outline-offset: 2px !important;\n  border-radius: 4px !important;\n}\n</style>"
      },
      "transparent": true
    }
  ],
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": ["5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d"],
    "time_options": ["5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d"]
  },
  "refresh": "1m",
  "version": 3,
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "postgres",
          "uid": "supabase"
        },
        "definition": "SELECT DISTINCT COALESCE(author_display_name, author_username) AS display_name FROM discord_messages WHERE author_display_name IS NOT NULL AND author_display_name <> '' ORDER BY display_name",
        "hide": 0,
        "includeAll": true,
        "label": "Discord Author",
        "multi": false,
        "name": "discord_author",
        "options": [],
        "query": "SELECT DISTINCT COALESCE(author_display_name, author_username) AS display_name FROM discord_messages WHERE author_display_name IS NOT NULL AND author_display_name <> '' ORDER BY display_name",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "postgres",
          "uid": "supabase"
        },
        "definition": "SELECT DISTINCT COALESCE(NULLIF(TRIM(from_user_first_name || ' ' || COALESCE(from_user_last_name, '')), ''), from_user_first_name, from_user_username) AS display_name FROM telegram_messages WHERE from_user_first_name IS NOT NULL AND from_user_first_name <> '' ORDER BY display_name",
        "hide": 0,
        "includeAll": true,
        "label": "Telegram Author",
        "multi": false,
        "name": "telegram_author",
        "options": [],
        "query": "SELECT DISTINCT COALESCE(NULLIF(TRIM(from_user_first_name || ' ' || COALESCE(from_user_last_name, '')), ''), from_user_first_name, from_user_username) AS display_name FROM telegram_messages WHERE from_user_first_name IS NOT NULL AND from_user_first_name <> '' ORDER BY display_name",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "hide": 0,
        "label": "Keyword Search",
        "name": "keyword_search",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  }
}