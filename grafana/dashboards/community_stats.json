{
  "id": null,
  "uid": "community-stats",
  "title": "Community Analytics Dashboard",
  "description": "Advanced community engagement and activity analytics with comprehensive insights across Discord, Telegram, and Mava support systems",
  "tags": ["community", "analytics", "discord", "telegram", "mava", "engagement"],
  "timezone": "browser",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "style": "dark",
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": ["community"],
      "title": "View All Community Dashboards",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "weekStart": "",
  "panels": [
    {
      "id": 1,
      "title": "Discord Messages",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 0, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_messages FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 80,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#4ECDC4",
                "value": null
              },
              {
                "color": "#45B7D1",
                "value": 1000
              },
              {
                "color": "#96CEB4",
                "value": 5000
              },
              {
                "color": "#FFEAA7",
                "value": 10000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 2,
      "title": "Discord Messages (All Time)",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 6, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_messages FROM discord_messages WHERE author_is_bot = false;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#667eea",
                "value": null
              },
              {
                "color": "#764ba2",
                "value": 5000
              },
              {
                "color": "#f093fb",
                "value": 15000
              },
              {
                "color": "#f5576c",
                "value": 30000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 3,
      "title": "Telegram Messages",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 12, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_messages FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo();",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#00d2ff",
                "value": null
              },
              {
                "color": "#3a7bd5",
                "value": 1000
              },
              {
                "color": "#4facfe",
                "value": 5000
              },
              {
                "color": "#00f2fe",
                "value": 10000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 4,
      "title": "Telegram Messages (All Time)",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 18, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_messages FROM telegram_messages;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#a8edea",
                "value": null
              },
              {
                "color": "#fed6e3",
                "value": 5000
              },
              {
                "color": "#d299c2",
                "value": 15000
              },
              {
                "color": "#fef9d3",
                "value": 30000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 5,
      "title": "Active Discord Users",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 0, "y": 5},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(DISTINCT author_id) AS active_users FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#667eea",
                "value": null
              },
              {
                "color": "#764ba2",
                "value": 50
              },
              {
                "color": "#f093fb",
                "value": 200
              },
              {
                "color": "#f5576c",
                "value": 500
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 6,
      "title": "Active Discord Users (All Time)",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 6, "y": 5},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(DISTINCT author_id) AS active_users FROM discord_messages WHERE author_is_bot = false;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#ff9a9e",
                "value": null
              },
              {
                "color": "#fecfef",
                "value": 500
              },
              {
                "color": "#fecfef",
                "value": 1000
              },
              {
                "color": "#ffc3a0",
                "value": 2000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 7,
      "title": "Active Telegram Users",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 12, "y": 5},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(DISTINCT from_user_id) AS active_users FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo();",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#a8edea",
                "value": null
              },
              {
                "color": "#fed6e3",
                "value": 25
              },
              {
                "color": "#d299c2",
                "value": 100
              },
              {
                "color": "#fef9d3",
                "value": 300
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 8,
      "title": "Active Telegram Users (All Time)",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 18, "y": 5},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(DISTINCT from_user_id) AS active_users FROM telegram_messages;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#84fab0",
                "value": null
              },
              {
                "color": "#8fd3f4",
                "value": 200
              },
              {
                "color": "#a8edea",
                "value": 500
              },
              {
                "color": "#fed6e3",
                "value": 1000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 28,
      "title": "Support Tickets",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 0, "y": 10},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_tickets FROM mava_tickets WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo();",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#ff9a9e",
                "value": null
              },
              {
                "color": "#fecfef",
                "value": 10
              },
              {
                "color": "#ffc3a0",
                "value": 50
              },
              {
                "color": "#ffafbd",
                "value": 100
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 29,
      "title": "Support Messages",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 6, "y": 10},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_messages FROM mava_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo();",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#ffecd2",
                "value": null
              },
              {
                "color": "#fcb69f",
                "value": 20
              },
              {
                "color": "#ff9a9e",
                "value": 100
              },
              {
                "color": "#fecfef",
                "value": 500
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 30,
      "title": "Avg Response Time",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 12, "y": 10},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT AVG(EXTRACT(EPOCH FROM (updated_at - created_at))/3600) AS avg_response_hours FROM mava_tickets WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND updated_at IS NOT NULL AND updated_at != created_at;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#4ECDC4",
                "value": null
              },
              {
                "color": "#96CEB4",
                "value": 12
              },
              {
                "color": "#FFEAA7",
                "value": 24
              },
              {
                "color": "#FFB6C1",
                "value": 48
              }
            ]
          },
          "unit": "h"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 31,
      "title": "Total Community Health Score",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 18, "y": 10},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH community_metrics AS (SELECT COUNT(DISTINCT dm.author_id) * 10 as discord_users, COUNT(DISTINCT tm.from_user_id) * 10 as telegram_users, COUNT(DISTINCT dm.id) * 0.1 as discord_messages, COUNT(DISTINCT tm.id) * 0.1 as telegram_messages, COUNT(DISTINCT mt.id) * 5 as support_tickets FROM discord_messages dm FULL OUTER JOIN telegram_messages tm ON DATE(dm.created_at) = DATE(tm.date) FULL OUTER JOIN mava_tickets mt ON DATE(dm.created_at) = DATE(mt.created_at) WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() AND dm.author_is_bot = false) SELECT ROUND(discord_users + telegram_users + discord_messages + telegram_messages + support_tickets) as health_score FROM community_metrics;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#ff9a9e",
                "value": null
              },
              {
                "color": "#fecfef",
                "value": 1000
              },
              {
                "color": "#ffc3a0",
                "value": 5000
              },
              {
                "color": "#667eea",
                "value": 10000
              },
              {
                "color": "#764ba2",
                "value": 20000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "orientation": "auto",
        "textMode": "auto",
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 9,
      "title": "Top Discord Community Activity",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 0, "y": 37},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COALESCE(MAX(author_avatar_url), 'https://cdn.discordapp.com/embed/avatars/' || ((author_id::bigint >> 22) % 6) || '.png') AS \"Avatar\", COALESCE(author_display_name, author_username) AS \"Community Member\", author_username AS Username, author_id AS UserID, COUNT(*) AS Messages FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false GROUP BY author_id, author_username, author_display_name ORDER BY Messages DESC LIMIT 20;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "100%",
        "rowHeight": 120
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Avatar"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Username"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Profile",
                    "url": "https://discord.com/users/${__data.fields.UserID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "light-pink"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "id": 10,
      "title": "Top Telegram Community Activity",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 12, "y": 37},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH user_stats AS (SELECT tm.from_user_id, COALESCE(NULLIF(TRIM(tm.from_user_first_name || ' ' || COALESCE(tm.from_user_last_name, '')), ''), tm.from_user_first_name, tm.from_user_username, 'Unknown') AS community_member, COALESCE(tm.from_user_username, 'N/A') AS username, COUNT(*) AS messages, COUNT(DISTINCT DATE(tm.date)) AS active_days, COUNT(DISTINCT tm.chat_id) AS chats_used, AVG(LENGTH(tm.text)) AS avg_message_length, (COUNT(*) * 0.3 + COUNT(DISTINCT DATE(tm.date)) * 2.0 + COUNT(DISTINCT tm.chat_id) * 1.5 + AVG(LENGTH(tm.text)) * 0.01) AS engagement_score FROM telegram_messages tm WHERE tm.date >= $__timeFrom() AND tm.date <= $__timeTo() AND COALESCE(tm.from_user_is_bot, false) = false GROUP BY tm.from_user_id, tm.from_user_first_name, tm.from_user_last_name, tm.from_user_username), ranked_users AS (SELECT *, ROW_NUMBER() OVER (ORDER BY engagement_score DESC) AS rank, CASE WHEN engagement_score >= 100 THEN 'Platinum' WHEN engagement_score >= 50 THEN 'Gold' WHEN engagement_score >= 20 THEN 'Silver' ELSE 'Bronze' END AS tier FROM user_stats) SELECT 'https://ui-avatars.com/api/?name=' || REPLACE(community_member, ' ', '+') || '&size=128&background=FFB6C1&color=000000' AS \"Avatar\", community_member AS \"Community Member\", username AS Username, from_user_id AS UserID, messages AS Messages, ROUND(engagement_score, 1) AS \"Engagement Score\", rank AS Rank, tier AS Tier FROM ranked_users ORDER BY engagement_score DESC LIMIT 20;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "100%",
        "rowHeight": 120
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Avatar"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Username"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Profile",
                    "url": "https://t.me/${__data.fields.Username}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "light-pink"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Engagement Score"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 120
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": 20
                    },
                    {
                      "color": "green",
                      "value": 50
                    },
                    {
                      "color": "blue",
                      "value": 100
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Rank"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "orange"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Tier"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "Bronze": {
                        "color": "#CD7F32",
                        "index": 0
                      },
                      "Silver": {
                        "color": "#C0C0C0",
                        "index": 1
                      },
                      "Gold": {
                        "color": "#FFD700",
                        "index": 2
                      },
                      "Platinum": {
                        "color": "#E5E4E2",
                        "index": 3
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UserID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      }
    },
    {
      "id": 16,
      "title": "Latest Discord Messages",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 0, "y": 57},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COALESCE(dm.author_avatar_url, 'https://cdn.discordapp.com/embed/avatars/' || ((dm.author_id::bigint >> 22) % 6) || '.png') AS \"Avatar\", COALESCE(dm.author_display_name, dm.author_username) AS \"Author\", dm.content AS \"Message\", dm.created_at AS \"Time\", dc.name AS \"Channel\", dm.author_id AS \"AuthorID\", dm.id AS \"MessageID\", dm.channel_id AS \"ChannelID\" FROM discord_messages dm LEFT JOIN discord_channels dc ON dm.channel_id = dc.channel_id WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() AND dm.author_is_bot = false AND dm.content IS NOT NULL AND dm.content <> '' ORDER BY dm.created_at DESC LIMIT 50;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "100%",
        "rowHeight": 120
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Avatar"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Author"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Profile",
                    "url": "https://discord.com/users/${__data.fields.AuthorID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "light-pink"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "AuthorID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Message"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 400
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Message",
                    "url": "https://discord.com/channels/1063532490829598760/${__data.fields.ChannelID}/${__data.fields.MessageID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Channel"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Discord Channel",
                    "url": "https://discord.com/channels/1063532490829598760/${__data.fields.ChannelID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MessageID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ChannelID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      }
    },
    {
      "id": 17,
      "title": "Latest Telegram Messages",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 12, "x": 12, "y": 57},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT 'https://ui-avatars.com/api/?name=' || COALESCE(tm.from_user_first_name, '') || '+' || COALESCE(tm.from_user_last_name, '') || '&size=128&background=FFB6C1&color=000000' AS \"Avatar\", COALESCE(NULLIF(TRIM(tm.from_user_first_name || ' ' || COALESCE(tm.from_user_last_name, '')), ''), tm.from_user_first_name, tm.from_user_username, 'Unknown') AS \"Author\", tm.text AS \"Message\", tm.date AS \"Time\", COALESCE(tm.from_user_username, 'N/A') AS \"Username\", tm.message_id AS \"MessageID\", tm.chat_id AS \"ChatID\" FROM telegram_messages tm WHERE tm.date >= $__timeFrom() AND tm.date <= $__timeTo() AND COALESCE(tm.from_user_is_bot, false) = false AND tm.text IS NOT NULL AND tm.text <> '' ORDER BY tm.date DESC LIMIT 50;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "fontSize": "100%",
        "rowHeight": 120
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "table",
            "filterable": true
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Avatar"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "image"
              },
              {
                "id": "custom.width",
                "value": 140
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Author"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Profile",
                    "url": "https://t.me/${__data.fields.Username}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "light-pink"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Message"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 400
              },
              {
                "id": "links",
                "value": [
                  {
                    "title": "View Telegram Message",
                    "url": "https://t.me/c/${__data.fields.ChatID}/${__data.fields.MessageID}"
                  }
                ]
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Username"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MessageID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ChatID"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      }
    },
    {
      "id": 11,
      "title": "Discord Daily Message Activity",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 15},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT date_trunc('day', created_at) AS time, COUNT(*) AS messages FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false GROUP BY time ORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlYlRd"
          },
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 3,
            "fillOpacity": 30,
            "gradientMode": "hue",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "never",
            "pointSize": 5,
            "stacking": {
              "mode": "none",
              "group": "A"
            },
            "axisPlacement": "auto",
            "axisLabel": "",
            "scaleDistribution": {
              "type": "linear"
            },
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          }
        }
      }
    },
    {
      "id": 12,
      "title": "Telegram Daily Message Activity",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 15},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT date_trunc('day', date) AS time, COUNT(*) AS messages FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() GROUP BY time ORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 3,
            "fillOpacity": 30,
            "gradientMode": "hue",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "never",
            "pointSize": 5,
            "stacking": {
              "mode": "none",
              "group": "A"
            },
            "axisPlacement": "auto",
            "axisLabel": "",
            "scaleDistribution": {
              "type": "linear"
            },
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          }
        }
      }
    },
    {
      "id": 13,
      "title": "Discord Channel Activity (Top 5 Channels)",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 49},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT dc.name AS Channel, COUNT(dm.*) AS Messages FROM discord_messages dm JOIN discord_channels dc ON dm.channel_id = dc.channel_id WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() AND dm.author_is_bot = false AND dm.channel_id NOT IN ('1065252962470994021', '1336461137767563304', '1068618500656078849', '1092260477658214492', '1063595387513999430', '1063540719857442876', '1063533369574568027') GROUP BY dc.name ORDER BY Messages DESC LIMIT 5;",
          "refId": "A"
        }
      ]
    },
    {
      "id": 14,
      "title": "Most Common Words in Discord",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 29},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH words AS (SELECT unnest(string_to_array(lower(regexp_replace(content, '[^a-zA-Z0-9\\s]', '', 'g')), ' ')) AS word FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false AND content IS NOT NULL AND content <> '' AND LENGTH(content) > 3), filtered_words AS (SELECT word FROM words WHERE LENGTH(word) > 3 AND word NOT IN ('this', 'that', 'with', 'have', 'will', 'from', 'they', 'been', 'were', 'said', 'each', 'which', 'their', 'what', 'about', 'would', 'there', 'could', 'more', 'very', 'than', 'just', 'like', 'only', 'into', 'over', 'also', 'back', 'after', 'use', 'two', 'how', 'our', 'work', 'first', 'well', 'way', 'even', 'new', 'want', 'because', 'any', 'these', 'give', 'day', 'most', 'us', 'automod', 'blocked', 'analysis', 'scam', 'banned', 'indicates', 'aliases', 'message', 'user')) SELECT word AS \"Word\", COUNT(*) AS \"Frequency\" FROM filtered_words GROUP BY word ORDER BY COUNT(*) DESC LIMIT 25;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "displayMode": "list",
            "filterable": false,
            "showUnfilled": true
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Word"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "bottom"
              },
              {
                "id": "custom.axisLabel",
                "value": "Words"
              }
            ]
          }
        ]
      },
      "options": {
        "orientation": "vertical",
        "displayMode": "gradient",
        "xTickLabelRotation": 45,
        "xTickLabelSpacing": 0,
        "showValue": "always",
        "groupWidth": 0.8,
        "barWidth": 0.95
      }
    },
    {
      "id": 15,
      "title": "Most Common Words in Telegram",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 29},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH words AS (SELECT unnest(string_to_array(lower(regexp_replace(text, '[^a-zA-Z0-9\\s]', '', 'g')), ' ')) AS word FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() AND text IS NOT NULL AND text <> '' AND LENGTH(text) > 3), filtered_words AS (SELECT word FROM words WHERE LENGTH(word) > 3 AND word NOT IN ('this', 'that', 'with', 'have', 'will', 'from', 'they', 'been', 'were', 'said', 'each', 'which', 'their', 'what', 'about', 'would', 'there', 'could', 'more', 'very', 'than', 'just', 'like', 'only', 'into', 'over', 'also', 'back', 'after', 'use', 'two', 'how', 'our', 'work', 'first', 'well', 'way', 'even', 'new', 'want', 'because', 'any', 'these', 'give', 'day', 'most', 'us')) SELECT word AS \"Word\", COUNT(*) AS \"Frequency\" FROM filtered_words GROUP BY word ORDER BY COUNT(*) DESC LIMIT 25;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "displayMode": "list",
            "filterable": false,
            "showUnfilled": true
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Word"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "bottom"
              },
              {
                "id": "custom.axisLabel",
                "value": "Words"
              }
            ]
          }
        ]
      },
      "options": {
        "orientation": "vertical",
        "displayMode": "gradient",
        "xTickLabelRotation": 45,
        "xTickLabelSpacing": 0,
        "showValue": "always",
        "groupWidth": 0.8,
        "barWidth": 0.95
      }
    },
    {
      "id": 18,
      "title": "Discord Server Joins & Leaves",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 6, "w": 12, "x": 0, "y": 23},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT date_trunc('day', occurred_at) AS time, 'Joins' AS metric, COUNT(*) AS value FROM discord_actions WHERE action_type = 'member_join' AND occurred_at >= $__timeFrom() AND occurred_at <= $__timeTo() GROUP BY time UNION ALL SELECT date_trunc('day', occurred_at) AS time, 'Leaves' AS metric, COUNT(*) AS value FROM discord_actions WHERE action_type = 'member_leave' AND occurred_at >= $__timeFrom() AND occurred_at <= $__timeTo() GROUP BY time ORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 3,
            "fillOpacity": 25,
            "gradientMode": "hue",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "auto",
            "pointSize": 5,
            "stacking": {
              "mode": "none",
              "group": "A"
            }
          }
        }
      }
    },
    {
      "id": 19,
      "title": "Telegram Server Joins & Leaves",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 6, "w": 12, "x": 12, "y": 23},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT date_trunc('day', date) AS time, 'Joins' AS metric, COUNT(*) AS value FROM telegram_messages WHERE (new_chat_members IS NOT NULL AND new_chat_members::text != '' AND new_chat_members::text != '[]' AND new_chat_members::text != 'null') AND date >= $__timeFrom() AND date <= $__timeTo() GROUP BY time UNION ALL SELECT date_trunc('day', date) AS time, 'Leaves' AS metric, COUNT(*) AS value FROM telegram_messages WHERE (left_chat_member IS NOT NULL AND left_chat_member::text != '' AND left_chat_member::text != '{}' AND left_chat_member::text != 'null') AND date >= $__timeFrom() AND date <= $__timeTo() GROUP BY time ORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 3,
            "fillOpacity": 25,
            "gradientMode": "hue",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "auto",
            "pointSize": 5,
            "stacking": {
              "mode": "none",
              "group": "A"
            }
          }
        }
      }
    },
    {
      "id": 20,
      "title": "Community Activity Heatmap",
      "type": "heatmap",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 10, "w": 24, "x": 0, "y": 69},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH hourly_activity AS (SELECT EXTRACT(HOUR FROM created_at) AS hour, EXTRACT(DOW FROM created_at) AS dow, COUNT(*) AS message_count FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false GROUP BY hour, dow UNION ALL SELECT EXTRACT(HOUR FROM date) AS hour, EXTRACT(DOW FROM date) AS dow, COUNT(*) AS message_count FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() GROUP BY hour, dow) SELECT hour, CASE dow WHEN 0 THEN 'Sunday' WHEN 1 THEN 'Monday' WHEN 2 THEN 'Tuesday' WHEN 3 THEN 'Wednesday' WHEN 4 THEN 'Thursday' WHEN 5 THEN 'Friday' WHEN 6 THEN 'Saturday' END AS day_of_week, SUM(message_count) AS total_messages FROM hourly_activity GROUP BY hour, dow, day_of_week ORDER BY dow, hour;",
          "refId": "A"
        }
      ],
      "options": {
        "calculate": false,
        "calculation": {},
        "cellGap": 2,
        "cellRadius": 0,
        "cellValues": {},
        "color": {
          "exponent": 0.5,
          "fill": "#667eea",
          "mode": "spectrum",
          "reverse": false,
          "scale": "exponential",
          "scheme": "Plasma",
          "steps": 256
        },
        "exemplars": {
          "color": "rgba(255,0,255,0.7)"
        },
        "filterValues": {
          "le": 1e-9
        },
        "legend": {
          "show": true
        },
        "rowsFrame": {
          "layout": "auto"
        },
        "tooltip": {
          "show": true,
          "yHistogram": false
        },
        "yAxis": {
          "axisLabel": "",
          "axisPlacement": "left",
          "reverse": false,
          "unit": "short"
        }
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 21,
      "title": "Platform Comparison",
      "type": "piechart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 8, "x": 0, "y": 79},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT 'Discord' as platform, COUNT(*) as messages FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false UNION ALL SELECT 'Telegram' as platform, COUNT(*) as messages FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() UNION ALL SELECT 'Mava Support' as platform, COUNT(*) as messages FROM mava_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo();",
          "refId": "A"
        }
      ],
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "pieType": "donut",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "values": ["percent"]
        },
        "displayLabels": ["name", "percent"]
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Discord"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#5865F2"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Telegram"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#0088CC"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Mava Support"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#FF6B6B"
                }
              }
            ]
          }
        ]
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 22,
      "title": "User Engagement Score Distribution",
      "type": "histogram",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 8, "x": 8, "y": 79},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH discord_engagement AS (SELECT author_id, COUNT(*) as message_count, COUNT(DISTINCT DATE(created_at)) as active_days, COUNT(DISTINCT channel_id) as channels_used, AVG(LENGTH(content)) as avg_message_length, (COUNT(*) * 0.3 + COUNT(DISTINCT DATE(created_at)) * 2.0 + COUNT(DISTINCT channel_id) * 1.5 + COALESCE(AVG(LENGTH(content)), 0) * 0.01) as engagement_score FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false GROUP BY author_id), telegram_engagement AS (SELECT from_user_id, COUNT(*) as message_count, COUNT(DISTINCT DATE(date)) as active_days, COUNT(DISTINCT chat_id) as chats_used, AVG(LENGTH(text)) as avg_message_length, (COUNT(*) * 0.3 + COUNT(DISTINCT DATE(date)) * 2.0 + COUNT(DISTINCT chat_id) * 1.5 + COALESCE(AVG(LENGTH(text)), 0) * 0.01) as engagement_score FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() GROUP BY from_user_id) SELECT ROUND(engagement_score) as engagement_score FROM discord_engagement UNION ALL SELECT ROUND(engagement_score) as engagement_score FROM telegram_engagement;",
          "refId": "A"
        }
      ],
      "options": {
        "bucketSize": 10,
        "buckets": []
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          }
        }
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 23,
      "title": "Bot vs Human Activity",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 8, "x": 16, "y": 79},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT CASE WHEN author_is_bot THEN 'Bot Messages' ELSE 'Human Messages' END as message_type, COUNT(*) as count FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() GROUP BY author_is_bot ORDER BY count DESC;",
          "refId": "A"
        }
      ],
      "options": {
        "orientation": "horizontal",
        "displayMode": "gradient",
        "showValue": "always",
        "groupWidth": 0.8,
        "barWidth": 0.95,
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "displayMode": "list",
            "filterable": false,
            "showUnfilled": true
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Human Messages"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#73BF69"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Bot Messages"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#F2495C"
                }
              }
            ]
          }
        ]
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 24,
      "title": "Channel Activity Trends",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 87},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT date_trunc('day', dm.created_at) as time, dc.name as channel, COUNT(*) as messages FROM discord_messages dm JOIN discord_channels dc ON dm.channel_id = dc.channel_id WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() AND dm.author_is_bot = false AND dm.channel_id NOT IN ('1065252962470994021', '1336461137767563304', '1068618500656078849', '1092260477658214492', '1063595387513999430', '1063540719857442876', '1063533369574568027') GROUP BY time, dc.name, dm.channel_id HAVING COUNT(*) > 10 ORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlYlRd"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "options": {
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        },
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        }
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 25,
      "title": "Support Ticket Status Distribution",
      "type": "piechart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 87},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT status, COUNT(*) as count FROM mava_tickets WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() GROUP BY status ORDER BY count DESC;",
          "refId": "A"
        }
      ],
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "pieType": "donut",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "values": ["value", "percent"]
        },
        "displayLabels": ["name", "value", "percent"]
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "open"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#FF6B6B"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "closed"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#4ECDC4"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "pending"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed",
                  "fixedColor": "#FFE66D"
                }
              }
            ]
          }
        ]
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 26,
      "title": "Response Time Analysis",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 95},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "WITH response_times AS (SELECT t.id, t.created_at, t.updated_at, EXTRACT(EPOCH FROM (t.updated_at - t.created_at))/3600 as response_time_hours FROM mava_tickets t WHERE t.created_at >= $__timeFrom() AND t.created_at <= $__timeTo() AND t.updated_at IS NOT NULL AND t.updated_at != t.created_at) SELECT date_trunc('day', created_at) as time, AVG(response_time_hours) as avg_response_time, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY response_time_hours) as median_response_time, PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY response_time_hours) as p95_response_time FROM response_times GROUP BY time ORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "Hours",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#4ECDC4",
                "value": null
              },
              {
                "color": "#96CEB4",
                "value": 12
              },
              {
                "color": "#FFEAA7",
                "value": 24
              },
              {
                "color": "#FFB6C1",
                "value": 48
              }
            ]
          },
          "unit": "h"
        },
        "overrides": []
      },
      "options": {
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        },
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        }
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 27,
      "title": "Top Community Contributors",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 12, "w": 24, "x": 0, "y": 103},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH discord_stats AS (SELECT author_id as user_id, COALESCE(author_display_name, author_username) as username, 'Discord' as platform, COUNT(*) as messages, COUNT(DISTINCT DATE(created_at)) as active_days, COUNT(DISTINCT channel_id) as channels_used, AVG(LENGTH(content)) as avg_message_length, (COUNT(*) * 0.3 + COUNT(DISTINCT DATE(created_at)) * 2.0 + COUNT(DISTINCT channel_id) * 1.5 + COALESCE(AVG(LENGTH(content)), 0) * 0.01) as engagement_score FROM discord_messages WHERE created_at >= $__timeFrom() AND created_at <= $__timeTo() AND author_is_bot = false GROUP BY author_id, author_display_name, author_username), telegram_stats AS (SELECT from_user_id::text as user_id, COALESCE(NULLIF(TRIM(from_user_first_name || ' ' || COALESCE(from_user_last_name, '')), ''), from_user_first_name, from_user_username, 'Unknown') as username, 'Telegram' as platform, COUNT(*) as messages, COUNT(DISTINCT DATE(date)) as active_days, COUNT(DISTINCT chat_id) as chats_used, AVG(LENGTH(text)) as avg_message_length, (COUNT(*) * 0.3 + COUNT(DISTINCT DATE(date)) * 2.0 + COUNT(DISTINCT chat_id) * 1.5 + COALESCE(AVG(LENGTH(text)), 0) * 0.01) as engagement_score FROM telegram_messages WHERE date >= $__timeFrom() AND date <= $__timeTo() GROUP BY from_user_id, from_user_first_name, from_user_last_name, from_user_username), combined_stats AS (SELECT * FROM discord_stats UNION ALL SELECT * FROM telegram_stats), ranked_users AS (SELECT username, platform, messages, active_days, COALESCE(channels_used, chats_used) as spaces_used, ROUND(avg_message_length, 1) as avg_msg_len, ROUND(engagement_score, 2) as engagement_score, ROW_NUMBER() OVER (ORDER BY engagement_score DESC) as rank, CASE WHEN engagement_score >= 100 THEN 'Elite' WHEN engagement_score >= 50 THEN 'Advanced' WHEN engagement_score >= 20 THEN 'Active' ELSE 'Casual' END as tier FROM combined_stats) SELECT username as \"Username\", platform as \"Platform\", messages as \"Messages\", active_days as \"Active Days\", spaces_used as \"Spaces Used\", avg_msg_len as \"Avg Message Length\", engagement_score as \"Engagement Score\", rank as \"Rank\", tier as \"Tier\" FROM ranked_users ORDER BY engagement_score DESC LIMIT 50;",
          "refId": "A"
        }
      ],
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Engagement Score"
          }
        ]
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Engagement Score"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": 20
                    },
                    {
                      "color": "green",
                      "value": 50
                    },
                    {
                      "color": "blue",
                      "value": 100
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Tier"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "Casual": {
                        "color": "#B4B4B4",
                        "index": 0
                      },
                      "Active": {
                        "color": "#73BF69",
                        "index": 1
                      },
                      "Advanced": {
                        "color": "#FF9830",
                        "index": 2
                      },
                      "Elite": {
                        "color": "#9C27B0",
                        "index": 3
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Platform"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "Discord": {
                        "color": "#5865F2",
                        "index": 0
                      },
                      "Telegram": {
                        "color": "#0088CC",
                        "index": 1
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "pluginVersion": "8.5.0"
    },
    {
      "id": 999,
      "title": "",
      "type": "text",
      "gridPos": {"h": 1, "w": 24, "x": 0, "y": 115},
      "options": {
        "mode": "html",
        "content": "<style>\n/* Modern gradient background for the entire dashboard */\n.main-view {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;\n  min-height: 100vh !important;\n}\n\n/* Panel background enhancements */\n.panel-container {\n  background: rgba(255, 255, 255, 0.1) !important;\n  backdrop-filter: blur(10px) !important;\n  border-radius: 15px !important;\n  border: 1px solid rgba(255, 255, 255, 0.2) !important;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1) !important;\n}\n\n/* Override all links to light pink, no underline, not bold */\n.table-panel a {\n  text-decoration: none !important;\n  font-weight: normal !important;\n  color: #FFB6C1 !important;\n}\n.table-panel a:hover {\n  color: #FF69B4 !important;\n}\n\n/* Custom CSS to style Discord profile links */\n.table-panel a[href*=\"discord.com/users/\"] {\n  text-decoration: none !important;\n  font-weight: normal !important;\n  color: #FFB6C1 !important;\n}\n\n.table-panel a[href*=\"discord.com/users/\"]:hover {\n  text-decoration: none !important;\n  font-weight: normal !important;\n  color: #FF69B4 !important;\n}\n\n/* Custom CSS to style Telegram profile links */\n.table-panel a[href*=\"t.me/\"] {\n  text-decoration: none !important;\n  font-weight: normal !important;\n  color: #FFB6C1 !important;\n}\n\n.table-panel a[href*=\"t.me/\"]:hover {\n  text-decoration: none !important;\n  font-weight: normal !important;\n  color: #FF69B4 !important;\n}\n\n/* Custom CSS to style Mava dashboard links */\n.table-panel a[href*=\"mava.app\"] {\n  text-decoration: none !important;\n  font-weight: normal !important;\n  color: #FFB6C1 !important;\n}\n\n.table-panel a[href*=\"mava.app\"]:hover {\n  text-decoration: none !important;\n  font-weight: normal !important;\n  color: #FF69B4 !important;\n}\n\n/* Additional targeting for table cells with links */\n.table-panel .table-panel-table td a {\n  text-decoration: none !important;\n  font-weight: normal !important;\n}\n\n.table-panel .table-panel-table td a[href*=\"discord.com/users/\"] {\n  color: #FFB6C1 !important;\n}\n\n.table-panel .table-panel-table td a[href*=\"discord.com/users/\"]:hover {\n  color: #FF69B4 !important;\n}\n\n.table-panel .table-panel-table td a[href*=\"t.me/\"] {\n  color: #FFB6C1 !important;\n}\n\n.table-panel .table-panel-table td a[href*=\"t.me/\"]:hover {\n  color: #FF69B4 !important;\n}\n\n.table-panel .table-panel-table td a[href*=\"mava.app\"] {\n  color: #FFB6C1 !important;\n}\n\n.table-panel .table-panel-table td a[href*=\"mava.app\"]:hover {\n  color: #FF69B4 !important;\n}\n\n/* Force row height for tables with avatars - comprehensive targeting */\n.table-panel .table-panel-table {\n  table-layout: fixed !important;\n}\n\n.table-panel .table-panel-table tbody tr {\n  height: 130px !important;\n  min-height: 130px !important;\n  max-height: 130px !important;\n}\n\n.table-panel .table-panel-table tbody tr td {\n  height: 130px !important;\n  min-height: 130px !important;\n  max-height: 130px !important;\n  vertical-align: middle !important;\n  padding: 8px !important;\n}\n\n/* Modern Grafana table targeting */\n.table-panel [data-testid=\"table\"] tbody tr {\n  height: 130px !important;\n  min-height: 130px !important;\n}\n\n.table-panel [data-testid=\"table\"] tbody tr td {\n  height: 130px !important;\n  min-height: 130px !important;\n  vertical-align: middle !important;\n  padding: 8px !important;\n}\n\n/* React table targeting */\n.table-panel .react-table tbody tr {\n  height: 130px !important;\n  min-height: 130px !important;\n}\n\n.table-panel .react-table tbody tr td {\n  height: 130px !important;\n  min-height: 130px !important;\n  vertical-align: middle !important;\n}\n\n/* Generic table targeting for different Grafana versions */\n.table-panel table tbody tr {\n  height: 130px !important;\n  min-height: 130px !important;\n}\n\n.table-panel table tbody tr td {\n  height: 130px !important;\n  min-height: 130px !important;\n  vertical-align: middle !important;\n  padding: 8px !important;\n}\n\n/* Larger avatar images - increased from 80px to 110px */\n.table-panel img {\n  width: 110px !important;\n  height: 110px !important;\n}\n\n/* More specific targeting for avatar images */\n.table-panel .table-panel-table td img {\n  width: 110px !important;\n  height: 110px !important;\n  object-fit: cover !important;\n}\n\n/* Target images in Avatar column specifically */\n.table-panel .table-panel-table tbody tr td:first-child img {\n  width: 110px !important;\n  height: 110px !important;\n  object-fit: cover !important;\n}\n\n/* Alternative targeting for different Grafana versions */\n.table-panel [data-column=\"Avatar\"] img {\n  width: 110px !important;\n  height: 110px !important;\n  object-fit: cover !important;\n}\n\n/* Target by column header */\n.table-panel th:contains(\"Avatar\") + td img {\n  width: 110px !important;\n  height: 110px !important;\n  object-fit: cover !important;\n}\n\n/* Ensure table cells accommodate the larger avatars */\n.table-panel .table-panel-table tbody tr td:first-child {\n  width: 140px !important;\n  min-width: 140px !important;\n  text-align: center !important;\n}\n\n/* Modern stat panel styling */\n.stat-panel {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%) !important;\n  backdrop-filter: blur(10px) !important;\n  border-radius: 15px !important;\n  border: 1px solid rgba(255, 255, 255, 0.2) !important;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1) !important;\n  transition: all 0.3s ease !important;\n}\n\n.stat-panel:hover {\n  transform: translateY(-2px) !important;\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15) !important;\n}\n\n/* Modern time series chart styling */\n.time-series-panel {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0.03) 100%) !important;\n  backdrop-filter: blur(15px) !important;\n  border-radius: 20px !important;\n  border: 1px solid rgba(255, 255, 255, 0.15) !important;\n  box-shadow: 0 10px 35px rgba(0, 0, 0, 0.12) !important;\n}\n\n/* Enhanced dashboard title styling */\n.dashboard-title {\n  background: linear-gradient(45deg, #667eea, #764ba2) !important;\n  -webkit-background-clip: text !important;\n  -webkit-text-fill-color: transparent !important;\n  background-clip: text !important;\n  font-weight: 700 !important;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;\n}\n\n/* Modern panel headers */\n.panel-header {\n  background: linear-gradient(90deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%) !important;\n  backdrop-filter: blur(5px) !important;\n  border-radius: 10px 10px 0 0 !important;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1) !important;\n}\n\n/* Enhanced grid lines and borders */\n.grid-line {\n  stroke: rgba(255, 255, 255, 0.1) !important;\n  stroke-width: 0.5px !important;\n}\n\n/* Modern scrollbar styling */\n::-webkit-scrollbar {\n  width: 8px !important;\n  height: 8px !important;\n}\n\n::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1) !important;\n  border-radius: 10px !important;\n}\n\n::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, #667eea, #764ba2) !important;\n  border-radius: 10px !important;\n  border: 2px solid rgba(255, 255, 255, 0.1) !important;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, #764ba2, #667eea) !important;\n}\n</style>"
      },
      "transparent": true
    }
  ],
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": ["5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d"],
    "time_options": ["5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d"]
  },
  "refresh": "5m",
  "version": 2,
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "templating": {
    "list": []
  }
}
