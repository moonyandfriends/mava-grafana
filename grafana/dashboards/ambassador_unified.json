{
  "id": null,
  "uid": "community-ambassadors",
  "title": "Community Ambassadors Performance Dashboard",
  "description": "Comprehensive ambassador analytics with cross-platform engagement tracking, performance metrics, and actionable insights",
  "tags": ["ambassador", "performance", "analytics", "cross-platform", "discord", "telegram", "x", "twitter", "engagement", "leaderboard"],
  "style": "dark",
  "timezone": "browser",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 2,
  "hideControls": false,
  "theme": "dark",
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "title": "Community Stats Dashboard",
      "tooltip": "View overall community statistics",
      "type": "dashboards",
      "url": "/d/community-stats"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "id": 1,
      "title": "Total Ambassadors",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 0, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS total_ambassadors FROM community_ambassadors;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {"color": "rgba(50, 172, 45, 0.97)", "value": null},
              {"color": "rgba(237, 129, 40, 0.97)", "value": 10},
              {"color": "rgba(245, 54, 54, 0.97)", "value": 20}
            ]
          },
          "unit": "short"
        }
      },
      "options": {
        "colorMode": "background_solid",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 2,
      "title": "Discord Activity",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 6, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "-- Diagnostic query to check community_ambassadors table\nSELECT \n  'Table exists' as status,\n  COUNT(*) as total_ambassadors,\n  COUNT(CASE WHEN discord_id IS NOT NULL THEN 1 END) as with_discord_id,\n  COUNT(CASE WHEN telegram_id IS NOT NULL THEN 1 END) as with_telegram_id\nFROM community_ambassadors\nUNION ALL\nSELECT \n  'Sample Discord IDs' as status,\n  0 as total_ambassadors,\n  0 as with_discord_id, \n  0 as with_telegram_id\nFROM community_ambassadors \nLIMIT 3;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {"color": "rgba(114, 137, 218, 0.97)", "value": null},
              {"color": "rgba(237, 129, 40, 0.97)", "value": 100},
              {"color": "rgba(245, 54, 54, 0.97)", "value": 500}
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "discord_posts"},
            "properties": [
              {"id": "displayName", "value": "Discord Posts"},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(114, 137, 218, 0.97)"}}
            ]
          }
        ]
      },
      "options": {
        "colorMode": "background_solid",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": "/^discord_posts$/"
        },
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 3,
      "title": "Telegram Activity",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 12, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "-- Diagnostic: Check if IDs match between tables\nSELECT \n  ca.ambassador,\n  ca.discord_id,\n  ca.telegram_id,\n  COALESCE(discord_matches.msg_count, 0) as discord_msg_count,\n  COALESCE(telegram_matches.msg_count, 0) as telegram_msg_count\nFROM community_ambassadors ca\nLEFT JOIN (\n  SELECT author_id, COUNT(*) as msg_count\n  FROM discord_messages \n  WHERE created_at >= NOW() - INTERVAL '7 days'\n    AND author_is_bot = false\n  GROUP BY author_id\n) discord_matches ON ca.discord_id::text = discord_matches.author_id\nLEFT JOIN (\n  SELECT from_user_id, COUNT(*) as msg_count\n  FROM telegram_messages \n  WHERE date >= NOW() - INTERVAL '7 days'\n    AND from_user_is_bot = false\n  GROUP BY from_user_id\n) telegram_matches ON ca.telegram_id = telegram_matches.from_user_id\nORDER BY ca.ambassador;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {"color": "rgba(34, 139, 206, 0.97)", "value": null},
              {"color": "rgba(237, 129, 40, 0.97)", "value": 50},
              {"color": "rgba(245, 54, 54, 0.97)", "value": 200}
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "telegram_posts"},
            "properties": [
              {"id": "displayName", "value": "Telegram Posts"},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(34, 139, 206, 0.97)"}}
            ]
          }
        ]
      },
      "options": {
        "colorMode": "background_solid",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": "/^telegram_posts$/"
        },
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 4,
      "title": "X/Twitter Activity",
      "type": "stat",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 5, "w": 6, "x": 18, "y": 0},
      "targets": [
        {
          "format": "table",
          "rawSql": "-- Count total X posts from all registered ambassadors\nWITH ambassador_posts AS (\n  SELECT COUNT(*) AS total_posts\n  FROM discord_messages dm\n  CROSS JOIN LATERAL jsonb_array_elements(COALESCE(dm.embeds, '[]'::jsonb)) AS embed\n  WHERE dm.webhook_id IS NOT NULL\n    AND embed->>'url' LIKE '%x.com%'\n    AND LOWER(\n      SUBSTRING(\n        (embed->'author'->>'name')::text \n        FROM '\\(@([A-Za-z0-9_]+)\\)'\n      )\n    ) IN (\n      SELECT LOWER(x_handle) \n      FROM community_ambassadors \n      WHERE x_handle IS NOT NULL\n    )\n    AND dm.created_at >= COALESCE($__timeFrom(), NOW() - INTERVAL '30 days')\n    AND dm.created_at <= COALESCE($__timeTo(), NOW())\n)\nSELECT total_posts AS x_posts FROM ambassador_posts;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {"color": "rgba(29, 161, 242, 0.97)", "value": null},
              {"color": "rgba(237, 129, 40, 0.97)", "value": 20},
              {"color": "rgba(245, 54, 54, 0.97)", "value": 100}
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "x_posts"},
            "properties": [
              {"id": "displayName", "value": "X Posts"},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(29, 161, 242, 0.97)"}}
            ]
          }
        ]
      },
      "options": {
        "colorMode": "background_solid",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": "/^x_posts$/"
        },
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 18,
      "title": "Discord Activity Distribution",
      "type": "piechart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 8, "x": 0, "y": 5},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT \n  ca.ambassador,\n  COUNT(dm.id) as discord_posts\nFROM community_ambassadors ca\nINNER JOIN discord_messages dm ON ca.discord_id::text = dm.author_id\nWHERE dm.created_at >= $__timeFrom() \n  AND dm.created_at <= $__timeTo()\n  AND dm.author_is_bot = false\n  AND dm.content IS NOT NULL\nGROUP BY ca.ambassador\nHAVING COUNT(dm.id) > 0\nORDER BY discord_posts DESC;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": [],
          "unit": "short"
        }
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "pieType": "pie",
        "tooltip": {"mode": "single", "sort": "none"},
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "values": ["percent", "value"]
        },
        "displayLabels": ["name", "percent"]
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 19,
      "title": "Telegram Activity Distribution", 
      "type": "piechart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 8, "x": 8, "y": 5},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT \n  ca.ambassador,\n  COUNT(tm.message_id) as telegram_posts\nFROM community_ambassadors ca\nINNER JOIN telegram_messages tm ON ca.telegram_id = tm.from_user_id\nWHERE tm.date >= $__timeFrom() \n  AND tm.date <= $__timeTo()\n  AND tm.from_user_is_bot = false\n  AND tm.text IS NOT NULL\nGROUP BY ca.ambassador\nHAVING COUNT(tm.message_id) > 0\nORDER BY telegram_posts DESC;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": [],
          "unit": "short"
        }
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "pieType": "pie",
        "tooltip": {"mode": "single", "sort": "none"},
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "values": ["percent", "value"]
        },
        "displayLabels": ["name", "percent"]
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 20,
      "title": "X/Twitter Activity Distribution",
      "type": "piechart", 
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 8, "x": 16, "y": 5},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH ambassador_x_posts AS (\n  SELECT \n    ca.ambassador,\n    COUNT(*) as x_posts\n  FROM community_ambassadors ca\n  INNER JOIN discord_messages dm ON TRUE\n  CROSS JOIN LATERAL jsonb_array_elements(COALESCE(dm.embeds, '[]'::jsonb)) AS embed\n  WHERE ca.x_handle IS NOT NULL\n    AND dm.webhook_id IS NOT NULL\n    AND embed->>'url' LIKE '%x.com%'\n    AND LOWER(\n      SUBSTRING(\n        (embed->'author'->>'name')::text \n        FROM '\\\\(@([A-Za-z0-9_]+)\\\\)'\n      )\n    ) = LOWER(ca.x_handle)\n    AND dm.created_at >= $__timeFrom()\n    AND dm.created_at <= $__timeTo()\n  GROUP BY ca.ambassador\n)\nSELECT \n  ambassador,\n  x_posts\nFROM ambassador_x_posts\nWHERE x_posts > 0\nORDER BY x_posts DESC;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": [],
          "unit": "short"
        }
      },
      "options": {
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "pieType": "pie",
        "tooltip": {"mode": "single", "sort": "none"},
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "values": ["percent", "value"]
        },
        "displayLabels": ["name", "percent"]
      },
      "pluginVersion": "9.0.0"
    },

    {
      "id": 6,
      "title": "Ambassador Performance Leaderboard",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 9, "w": 24, "x": 0, "y": 13},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH ambassador_activity AS (\n  SELECT \n    ca.ambassador,\n    ca.role,\n    ca.discord_id,\n    ca.telegram_id,\n    ca.x_handle,\n    CASE \n      WHEN COALESCE(discord_stats.discord_posts, 0) >= COALESCE(telegram_stats.telegram_posts, 0) THEN\n        COALESCE(discord_stats.discord_avatar_url, 'https://cdn.discordapp.com/embed/avatars/0.png')\n      ELSE\n        COALESCE(telegram_stats.telegram_avatar_url, 'https://ui-avatars.com/api/?name=' || ca.ambassador || '&size=80&background=0088CC&color=ffffff&bold=true')\n    END as discord_avatar,\n    COALESCE(discord_stats.discord_posts, 0) as discord_posts,\n    COALESCE(telegram_stats.telegram_posts, 0) as telegram_posts,\n    COALESCE(x_stats.x_posts, 0) as x_posts,\n    COALESCE(discord_stats.discord_posts, 0) + COALESCE(telegram_stats.telegram_posts, 0) + COALESCE(x_stats.x_posts, 0) as total_posts\n  FROM community_ambassadors ca\n  LEFT JOIN (\n    SELECT \n      dm.author_id,\n      COUNT(dm.id) as discord_posts,\n      MAX(dm.author_avatar_url) as discord_avatar_url\n    FROM discord_messages dm\n    WHERE dm.created_at >= $__timeFrom() \n      AND dm.created_at <= $__timeTo()\n      AND dm.author_is_bot = false\n      AND dm.content IS NOT NULL\n    GROUP BY dm.author_id\n  ) discord_stats ON ca.discord_id::text = discord_stats.author_id\n  LEFT JOIN (\n    SELECT \n      tm.from_user_id,\n      COUNT(tm.id) as telegram_posts,\n      MAX(tu.avatar_url) as telegram_avatar_url\n    FROM telegram_messages tm\n    LEFT JOIN telegram_users tu ON tm.from_user_id = tu.user_id\n    WHERE tm.date >= $__timeFrom() \n      AND tm.date <= $__timeTo()\n      AND tm.from_user_is_bot = false\n      AND tm.text IS NOT NULL\n    GROUP BY tm.from_user_id\n  ) telegram_stats ON ca.telegram_id = telegram_stats.from_user_id\n  LEFT JOIN (\n    SELECT \n      LOWER(x_handle) AS handle,\n      ambassador as ambassador_name,\n      COUNT(*) as x_posts\n    FROM community_ambassadors ca2\n    INNER JOIN discord_messages dm ON TRUE\n    CROSS JOIN LATERAL jsonb_array_elements(COALESCE(dm.embeds, '[]'::jsonb)) AS embed\n    WHERE dm.webhook_id IS NOT NULL\n      AND embed->>'url' LIKE '%x.com%'\n      AND LOWER(\n        SUBSTRING(\n          (embed->'author'->>'name')::text \n          FROM '\\(@([A-Za-z0-9_]+)\\)'\n        )\n      ) = LOWER(ca2.x_handle)\n      AND dm.created_at >= $__timeFrom()\n      AND dm.created_at <= $__timeTo()\n      AND ca2.x_handle IS NOT NULL\n    GROUP BY ca2.x_handle, ca2.ambassador\n  ) x_stats ON ca.ambassador = x_stats.ambassador_name\n)\nSELECT \n  discord_avatar,\n  ambassador,\n  role,\n  discord_posts,\n  telegram_posts,\n  x_posts,\n  total_posts,\n  discord_id,\n  telegram_id,\n  x_handle\nFROM ambassador_activity\nWHERE total_posts > 0\nORDER BY total_posts DESC\nLIMIT 20;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false,
            "filterable": true,
            "cellOptions": {
              "type": "auto"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [{"color": "rgba(50, 172, 45, 0.97)", "value": null}]
          }
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "discord_avatar"},
            "properties": [
              {"id": "displayName", "value": "Avatar"},
              {"id": "custom.width", "value": 80},
              {"id": "custom.displayMode", "value": "image"},
              {"id": "custom.cellOptions", "value": {"type": "image"}},
              {"id": "custom.cellOptions.displayMode", "value": "basic"}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Tier"},
            "properties": [
              {"id": "custom.displayMode", "value": "color-background"},
              {"id": "custom.width", "value": 120},
              {"id": "mappings", "value": [
                {"options": {"Elite": {"color": "rgba(156, 39, 176, 0.97)", "index": 0}}, "type": "value"},
                {"options": {"Excellent": {"color": "rgba(76, 175, 80, 0.97)", "index": 1}}, "type": "value"},
                {"options": {"Good": {"color": "rgba(139, 195, 74, 0.97)", "index": 2}}, "type": "value"},
                {"options": {"Average": {"color": "rgba(255, 193, 7, 0.97)", "index": 3}}, "type": "value"},
                {"options": {"Needs Support": {"color": "rgba(244, 67, 54, 0.97)", "index": 4}}, "type": "value"}
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Platform Presence"},
            "properties": [
              {"id": "custom.displayMode", "value": "color-background"},
              {"id": "custom.width", "value": 130},
              {"id": "mappings", "value": [
                {"options": {"Multi-Platform": {"color": "rgba(76, 175, 80, 0.97)", "index": 0}}, "type": "value"},
                {"options": {"Discord Only": {"color": "rgba(114, 137, 218, 0.97)", "index": 1}}, "type": "value"},
                {"options": {"Telegram Only": {"color": "rgba(34, 139, 206, 0.97)", "index": 2}}, "type": "value"},
                {"options": {"Inactive": {"color": "rgba(244, 67, 54, 0.97)", "index": 3}}, "type": "value"}
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "ambassador"},
            "properties": [
              {"id": "displayName", "value": "Ambassador"},
              {"id": "custom.width", "value": 140},
              {"id": "custom.displayMode", "value": "color-text"},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(33, 150, 243, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "discord_id"},
            "properties": [
              {"id": "displayName", "value": "Discord Profile"},
              {"id": "custom.width", "value": 120},
              {"id": "links", "value": [
                {
                  "title": "Open Discord Profile",
                  "url": "https://discordapp.com/users/${__value.raw}",
                  "targetBlank": true
                }
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "telegram_id"},
            "properties": [
              {"id": "displayName", "value": "Telegram Profile"},
              {"id": "custom.width", "value": 120},
              {"id": "links", "value": [
                {
                  "title": "Open Telegram Profile",
                  "url": "https://t.me/${__value.raw}",
                  "targetBlank": true
                }
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "x_handle"},
            "properties": [
              {"id": "displayName", "value": "X/Twitter Profile"},
              {"id": "custom.width", "value": 130},
              {"id": "links", "value": [
                {
                  "title": "Open X/Twitter Profile",
                  "url": "https://twitter.com/${__value.raw}",
                  "targetBlank": true
                }
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "discord_posts"},
            "properties": [
              {"id": "displayName", "value": "Discord Posts"},
              {"id": "custom.width", "value": 110},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(114, 137, 218, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "telegram_posts"},
            "properties": [
              {"id": "displayName", "value": "Telegram Posts"},
              {"id": "custom.width", "value": 120},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(34, 139, 206, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "x_posts"},
            "properties": [
              {"id": "displayName", "value": "X Posts"},
              {"id": "custom.width", "value": 90},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(29, 161, 242, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "total_posts"},
            "properties": [
              {"id": "displayName", "value": "Total Posts"},
              {"id": "custom.width", "value": 100},
              {"id": "custom.displayMode", "value": "gradient-gauge"},
              {"id": "max", "value": 1000},
              {"id": "min", "value": 0},
              {"id": "color", "value": {"mode": "continuous-BlPu"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Daily Rate"},
            "properties": [
              {"id": "custom.displayMode", "value": "gradient-gauge"},
              {"id": "custom.width", "value": 100},
              {"id": "max", "value": 50},
              {"id": "min", "value": 0},
              {"id": "color", "value": {"mode": "continuous-GrYlRd"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Rank"},
            "properties": [
              {"id": "custom.width", "value": 80},
              {"id": "custom.displayMode", "value": "color-text"},
              {"id": "color", "value": {"mode": "thresholds"}},
              {"id": "thresholds", "value": {
                "mode": "absolute",
                "steps": [
                  {"color": "rgba(255, 215, 0, 0.97)", "value": 1},
                  {"color": "rgba(192, 192, 192, 0.97)", "value": 2},
                  {"color": "rgba(205, 127, 50, 0.97)", "value": 3},
                  {"color": "rgba(76, 175, 80, 0.97)", "value": 4},
                  {"color": "rgba(33, 150, 243, 0.97)", "value": 8},
                  {"color": "rgba(103, 58, 183, 0.97)", "value": 15},
                  {"color": "rgba(158, 158, 158, 0.97)", "value": 25}
                ]
              }}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Role"},
            "properties": [
              {"id": "custom.width", "value": 100},
              {"id": "custom.displayMode", "value": "color-text"},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(255, 152, 0, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byRegexp", "options": "Discord|Telegram"},
            "properties": [
              {"id": "custom.width", "value": 80},
              {"id": "color", "value": {"mode": "thresholds"}},
              {"id": "thresholds", "value": {
                "mode": "absolute",
                "steps": [
                  {"color": "rgba(244, 67, 54, 0.97)", "value": 0},
                  {"color": "rgba(255, 193, 7, 0.97)", "value": 1},
                  {"color": "rgba(139, 195, 74, 0.97)", "value": 10},
                  {"color": "rgba(76, 175, 80, 0.97)", "value": 50}
                ]
              }}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Avg Msg Length"},
            "properties": [
              {"id": "custom.width", "value": 90},
              {"id": "unit", "value": "bytes"},
              {"id": "color", "value": {"mode": "thresholds"}},
              {"id": "thresholds", "value": {
                "mode": "absolute",
                "steps": [
                  {"color": "rgba(244, 67, 54, 0.97)", "value": 0},
                  {"color": "rgba(255, 193, 7, 0.97)", "value": 50},
                  {"color": "rgba(139, 195, 74, 0.97)", "value": 100},
                  {"color": "rgba(76, 175, 80, 0.97)", "value": 200}
                ]
              }}
            ]
          }
        ]
      },
      "options": {
        "showHeader": true,
        "sortBy": [{"desc": true, "displayName": "Activity Score"}],
        "cellHeight": "sm",
        "footer": {
          "show": false,
          "reducer": ["sum"],
          "fields": ""
        }
      }
    },



    {
      "id": 9,
      "title": "Ambassador Activity Timeline",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 22},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT \n  DATE_TRUNC('day', dm.created_at) as time, \n  'Discord' as metric, \n  COUNT(dm.id) as value \nFROM discord_messages dm \nJOIN community_ambassadors ca ON dm.author_id::text = ca.discord_id::text \nWHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \nAND dm.author_is_bot = false \nGROUP BY time \nUNION ALL \nSELECT \n  DATE_TRUNC('day', tm.date) as time, \n  'Telegram' as metric, \n  COUNT(tm.message_id) as value \nFROM telegram_messages tm \nJOIN community_ambassadors ca ON tm.from_user_id::text = ca.telegram_id::text \nWHERE tm.date >= $__timeFrom() AND tm.date <= $__timeTo() \nGROUP BY time \nORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 3,
            "fillOpacity": 30,
            "gradientMode": "opacity",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "auto",
            "pointSize": 8,
            "stacking": {"mode": "none", "group": "A"}
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "Discord"},
            "properties": [
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(114, 137, 218, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Telegram"},
            "properties": [
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(34, 139, 206, 0.97)"}}
            ]
          }
        ]
      },
      "options": {
        "legend": {
          "calcs": ["lastNotNull", "max", "mean"],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 10,
      "title": "Ambassador Response Time Analysis",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 36},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT \n  'Morning (6AM-12PM)' as response_category,\n  COUNT(CASE WHEN EXTRACT(HOUR FROM dm.created_at) BETWEEN 6 AND 11 THEN 1 END) as message_count\nFROM discord_messages dm \nWHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \nAND dm.author_is_bot = false\nUNION ALL\nSELECT \n  'Afternoon (12PM-6PM)' as response_category,\n  COUNT(CASE WHEN EXTRACT(HOUR FROM dm.created_at) BETWEEN 12 AND 17 THEN 1 END) as message_count\nFROM discord_messages dm \nWHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \nAND dm.author_is_bot = false\nUNION ALL\nSELECT \n  'Evening (6PM-12AM)' as response_category,\n  COUNT(CASE WHEN EXTRACT(HOUR FROM dm.created_at) BETWEEN 18 AND 23 THEN 1 END) as message_count\nFROM discord_messages dm \nWHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \nAND dm.author_is_bot = false\nUNION ALL\nSELECT \n  'Night (12AM-6AM)' as response_category,\n  COUNT(CASE WHEN EXTRACT(HOUR FROM dm.created_at) BETWEEN 0 AND 5 THEN 1 END) as message_count\nFROM discord_messages dm \nWHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \nAND dm.author_is_bot = false\nORDER BY message_count DESC;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "Very Fast (<5min)"},
            "properties": [
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(76, 175, 80, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Fast (5-30min)"},
            "properties": [
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(139, 195, 74, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Medium (30min-2h)"},
            "properties": [
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(255, 193, 7, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Slow (2h-24h)"},
            "properties": [
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(255, 152, 0, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Very Slow (>24h)"},
            "properties": [
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(244, 67, 54, 0.97)"}}
            ]
          }
        ]
      },
      "options": {
        "orientation": "vertical",
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.0.0"
    },

    {
      "id": 12,
      "title": "Ambassador Channel Distribution",
      "type": "barchart",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 36},
      "targets": [
        {
          "format": "table",
          "rawSql": "SELECT \n  dm.channel_id as channel_name,\n  COUNT(*) as message_count\nFROM discord_messages dm \nWHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \nAND dm.author_is_bot = false\nGROUP BY dm.channel_id\nORDER BY message_count DESC\nLIMIT 10;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": []
        }
      },
      "options": {
        "orientation": "horizontal",
        "legend": {
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 13,
      "title": "Ambassador Weekly Performance Trends",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 22},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "SELECT \n  DATE_TRUNC('day', dm.created_at) as time,\n  'Daily Messages' as metric,\n  COUNT(*) as value\nFROM discord_messages dm \nWHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \nAND dm.author_is_bot = false\nGROUP BY DATE_TRUNC('day', dm.created_at)\nORDER BY time;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 3,
            "fillOpacity": 20,
            "gradientMode": "opacity",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "auto",
            "pointSize": 6,
            "stacking": {"mode": "none", "group": "A"}
          }
        }
      },
      "options": {
        "legend": {
          "calcs": ["lastNotNull", "max", "mean"],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 14,
      "title": "Platform Comparison",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 6, "w": 24, "x": 0, "y": 30},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH platform_metrics AS (\n  SELECT \n    'Discord' as platform,\n    COUNT(dm.id) as total_messages,\n    COUNT(DISTINCT dm.author_id) as active_ambassadors,\n    COUNT(DISTINCT dm.channel_id) as channels_used,\n    COUNT(DISTINCT DATE(dm.created_at)) as active_days,\n    ROUND(AVG(LENGTH(dm.content)), 0) as avg_message_length,\n    COUNT(CASE WHEN dm.mentions != '{}' THEN 1 END) as messages_with_mentions,\n    COUNT(CASE WHEN dm.attachments != '{}' THEN 1 END) as messages_with_attachments\n  FROM discord_messages dm \n  JOIN community_ambassadors ca ON dm.author_id = ca.discord_id::text\n  WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \n  AND dm.author_is_bot = false\n  UNION ALL \n  SELECT \n    'Telegram' as platform,\n    COUNT(tm.message_id) as total_messages,\n    COUNT(DISTINCT tm.from_user_id) as active_ambassadors,\n    COUNT(DISTINCT tm.chat_id) as channels_used,\n    COUNT(DISTINCT DATE(tm.date)) as active_days,\n    ROUND(AVG(LENGTH(tm.text)), 0) as avg_message_length,\n    0 as messages_with_mentions,\n    COUNT(CASE WHEN tm.photo IS NOT NULL OR tm.document IS NOT NULL THEN 1 END) as messages_with_attachments\n  FROM telegram_messages tm \n  JOIN community_ambassadors ca ON tm.from_user_id = ca.telegram_id\n  WHERE tm.date >= $__timeFrom() AND tm.date <= $__timeTo()\n  UNION ALL \n  SELECT \n    'X/Twitter' as platform,\n    COUNT(DISTINCT dm.id) as total_messages,\n    COUNT(DISTINCT ca.ambassador) as active_ambassadors,\n    1 as channels_used,\n    COUNT(DISTINCT DATE(dm.created_at)) as active_days,\n    ROUND(AVG(LENGTH(dm.content)), 0) as avg_message_length,\n    0 as messages_with_mentions,\n    COUNT(CASE WHEN dm.attachments != '{}' THEN 1 END) as messages_with_attachments\n  FROM discord_messages dm \n  CROSS JOIN community_ambassadors ca \n  WHERE dm.channel_id = '1248750328896295084' \n  AND dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo() \n  AND dm.author_is_bot = false \n  AND dm.content ILIKE '%' || ca.x_handle || '%'\n)\nSELECT \n  platform as \"Platform\",\n  total_messages as \"Total Messages\",\n  active_ambassadors as \"Active Ambassadors\",\n  channels_used as \"Channels/Chats\",\n  active_days as \"Active Days\",\n  avg_message_length as \"Avg Message Length\",\n  messages_with_mentions as \"With Mentions\",\n  messages_with_attachments as \"With Attachments\",\n  ROUND(total_messages::numeric / NULLIF(active_ambassadors, 0), 1) as \"Msgs per Ambassador\",\n  ROUND(total_messages::numeric / NULLIF(active_days, 0), 1) as \"Msgs per Day\"\nFROM platform_metrics\nORDER BY total_messages DESC;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false,
            "filterable": true,
            "cellOptions": {
              "type": "auto"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [{"color": "rgba(50, 172, 45, 0.97)", "value": null}]
          }
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "Platform"},
            "properties": [
              {"id": "custom.width", "value": 120},
              {"id": "custom.displayMode", "value": "color-background"},
              {"id": "mappings", "value": [
                {"options": {"Discord": {"color": "rgba(114, 137, 218, 0.97)", "index": 0}}, "type": "value"},
                {"options": {"Telegram": {"color": "rgba(34, 139, 206, 0.97)", "index": 1}}, "type": "value"},
                {"options": {"X/Twitter": {"color": "rgba(29, 161, 242, 0.97)", "index": 2}}, "type": "value"}
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Total Messages"},
            "properties": [
              {"id": "custom.displayMode", "value": "gradient-gauge"},
              {"id": "custom.width", "value": 130},
              {"id": "max", "value": 5000},
              {"id": "min", "value": 0},
              {"id": "color", "value": {"mode": "continuous-BlPu"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Active Ambassadors"},
            "properties": [
              {"id": "custom.displayMode", "value": "gradient-gauge"},
              {"id": "custom.width", "value": 140},
              {"id": "max", "value": 50},
              {"id": "min", "value": 0},
              {"id": "color", "value": {"mode": "continuous-GrYlRd"}}
            ]
          },
          {
            "matcher": {"id": "byRegexp", "options": "Msgs per|Avg"},
            "properties": [
              {"id": "custom.width", "value": 110},
              {"id": "unit", "value": "short"},
              {"id": "decimals", "value": 1}
            ]
          }
        ]
      },
      "options": {
        "showHeader": true,
        "sortBy": [{"desc": true, "displayName": "Total Messages"}],
        "cellHeight": "sm",
        "footer": {
          "show": false,
          "reducer": ["sum"],
          "fields": ""
        }
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 16,
      "title": "Ambassador Messages (Discord & Telegram)",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 10, "w": 24, "x": 0, "y": 44},
      "targets": [
        {
          "format": "table",
          "rawSql": "WITH discord_messages_data AS (\n  SELECT \n    ca.ambassador,\n    dm.content,\n    dm.created_at,\n    'Discord' as platform,\n    dm.channel_id,\n    dm.guild_id,\n    dm.message_id,\n    dm.attachments,\n    dm.mentions,\n    dm.author_username,\n    COALESCE(dm.author_avatar_url, 'https://cdn.discordapp.com/embed/avatars/0.png') as avatar_url,\n    dm.author_id as user_id\n  FROM discord_messages dm\n  JOIN community_ambassadors ca ON dm.author_id = ca.discord_id::text\n  WHERE dm.created_at >= $__timeFrom() AND dm.created_at <= $__timeTo()\n    AND dm.author_is_bot = false\n    AND dm.content IS NOT NULL\n),\ntelegram_messages_data AS (\n  SELECT \n    ca.ambassador,\n    tm.text as content,\n    tm.date as created_at,\n    'Telegram' as platform,\n    tm.chat_id::text as channel_id,\n    NULL as guild_id,\n    tm.message_id::text as message_id,\n    CASE WHEN tm.photo IS NOT NULL OR tm.document IS NOT NULL THEN '[]'::jsonb ELSE '[]'::jsonb END as attachments,\n    ARRAY[]::text[] as mentions,\n    tm.from_user_username as author_username,\n    COALESCE(tu.avatar_url, 'https://ui-avatars.com/api/?name=' || COALESCE(tm.from_user_first_name, tm.from_user_username, 'User') || '&size=80&background=0088CC&color=ffffff&bold=true') as avatar_url,\n    tm.from_user_id::text as user_id\n  FROM telegram_messages tm\n  JOIN community_ambassadors ca ON tm.from_user_id = ca.telegram_id\n  LEFT JOIN telegram_users tu ON tm.from_user_id = tu.user_id\n  WHERE tm.date >= $__timeFrom() AND tm.date <= $__timeTo()\n    AND tm.from_user_is_bot = false\n    AND tm.text IS NOT NULL\n)\nSELECT \n  avatar_url as \"Avatar\",\n  ambassador as \"Ambassador\",\n  platform as \"Platform\",\n  author_username as \"Username\",\n  LEFT(content, 100) || CASE WHEN LENGTH(content) > 100 THEN '...' ELSE '' END as \"Message Preview\",\n  message_id as \"Message Link\",\n  created_at as \"Date\",\n  user_id,\n  guild_id,\n  channel_id,\n  CASE \n    WHEN platform = 'Discord' THEN 'https://discordapp.com/users/' || user_id\n    WHEN platform = 'Telegram' THEN 'https://t.me/' || user_id\n    ELSE NULL\n  END as \"Profile URL\"\nFROM (\n  SELECT * FROM discord_messages_data\n  UNION ALL\n  SELECT * FROM telegram_messages_data\n) combined_messages\nORDER BY created_at DESC\nLIMIT 1000;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false,
            "filterable": true,
            "cellOptions": {
              "type": "auto"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [{"color": "rgba(50, 172, 45, 0.97)", "value": null}]
          }
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "Avatar"},
            "properties": [
              {"id": "custom.width", "value": 60},
              {"id": "custom.displayMode", "value": "image"},
              {"id": "custom.cellOptions", "value": {"type": "image"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Ambassador"},
            "properties": [
              {"id": "custom.width", "value": 130},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(33, 150, 243, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Platform"},
            "properties": [
              {"id": "custom.width", "value": 80},
              {"id": "custom.displayMode", "value": "color-background"},
              {"id": "mappings", "value": [
                {"options": {"Discord": {"color": "rgba(114, 137, 218, 0.97)", "index": 0}}, "type": "value"},
                {"options": {"Telegram": {"color": "rgba(34, 139, 206, 0.97)", "index": 1}}, "type": "value"}
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Username"},
            "properties": [
              {"id": "custom.width", "value": 140},
              {"id": "links", "value": [
                {
                  "title": "Open Profile",
                  "url": "${__data.fields.Profile URL}",
                  "targetBlank": true
                }
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Message Preview"},
            "properties": []
          },
          {
            "matcher": {"id": "byName", "options": "Message Link"},
            "properties": [
              {"id": "custom.width", "value": 100},
              {"id": "displayName", "value": "Link"},
              {"id": "links", "value": [
                {
                  "title": "Open Message",
                  "url": "https://discord.com/channels/${__data.fields.guild_id}/${__data.fields.channel_id}/${__value.raw}",
                  "targetBlank": true
                }
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Date"},
            "properties": [
              {"id": "custom.width", "value": 180},
              {"id": "unit", "value": "dateTimeAsIso"}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "user_id"},
            "properties": [
              {"id": "custom.hidden", "value": true}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Profile URL"},
            "properties": [
              {"id": "custom.hidden", "value": true}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "guild_id"},
            "properties": [
              {"id": "custom.hidden", "value": true}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "channel_id"},
            "properties": [
              {"id": "custom.hidden", "value": true}
            ]
          }
        ]
      },
      "options": {
        "showHeader": true,
        "sortBy": [{"desc": true, "displayName": "Date"}],
        "cellHeight": "sm",
        "footer": {
          "show": false,
          "reducer": ["sum"],
          "fields": ""
        }
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 15,
      "title": "Ambassador X Posts",
      "type": "table",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 54},
      "targets": [
        {
          "format": "table",
          "rawSql": "-- Ambassador X Posts from webhook messages\nWITH ambassador_tweets AS (\n  SELECT DISTINCT\n    ca.ambassador,\n    ca.x_handle,\n    dm.created_at,\n    dm.author_username AS webhook_name,\n    dm.content,\n    -- Extract tweet URL\n    embed->>'url' AS tweet_url,\n    -- Extract tweet content\n    embed->>'description' AS tweet_content,\n    -- Extract tweet timestamp\n    (embed->>'timestamp')::timestamptz AS tweet_timestamp,\n    -- Extract author info\n    embed->'author'->>'name' AS author_display_name,\n    -- Extract action type\n    CASE \n      WHEN dm.content LIKE '%Posted]%' THEN 'Posted'\n      WHEN dm.content LIKE '%Quoted]%' THEN 'Quoted'\n      WHEN dm.content LIKE '%Reposted]%' THEN 'Reposted'\n      ELSE 'Shared'\n    END AS action_type\n  FROM community_ambassadors ca\n  INNER JOIN discord_messages dm ON TRUE\n  CROSS JOIN LATERAL jsonb_array_elements(COALESCE(dm.embeds, '[]'::jsonb)) AS embed\n  WHERE ca.x_handle IS NOT NULL\n    AND dm.webhook_id IS NOT NULL\n    AND embed->>'url' LIKE '%x.com%'\n    AND LOWER(\n      SUBSTRING(\n        (embed->'author'->>'name')::text \n        FROM '\\(@([A-Za-z0-9_]+)\\)'\n      )\n    ) = LOWER(ca.x_handle)\n    AND dm.created_at >= $__timeFrom() \n    AND dm.created_at <= $__timeTo()\n)\nSELECT \n  ambassador AS \"Ambassador\",\n  x_handle AS \"X Handle\",\n  action_type AS \"Action\",\n  LEFT(tweet_content, 200) || CASE WHEN LENGTH(tweet_content) > 200 THEN '...' ELSE '' END AS \"Tweet Content\",\n  tweet_url AS \"Tweet Link\",\n  tweet_timestamp::timestamp AS \"Posted Date\",\n  webhook_name AS \"Via\"\nFROM ambassador_tweets\nORDER BY tweet_timestamp DESC NULLS LAST, created_at DESC\nLIMIT 100;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false,
            "filterable": true,
            "cellOptions": {
              "type": "auto"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [{"color": "rgba(50, 172, 45, 0.97)", "value": null}]
          }
        },
        "overrides": [
          {
            "matcher": {"id": "byName", "options": "Ambassador"},
            "properties": [
              {"id": "custom.width", "value": 150},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(33, 150, 243, 0.97)"}}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "X Handle"},
            "properties": [
              {"id": "custom.width", "value": 160},
              {"id": "color", "value": {"mode": "fixed", "fixedColor": "rgba(29, 161, 242, 0.97)"}},
              {"id": "links", "value": [
                {
                  "title": "Open X/Twitter Profile",
                  "url": "https://twitter.com/${__value.raw}",
                  "targetBlank": true
                }
              ]}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Bot Message Content"},
            "properties": []
          },
          {
            "matcher": {"id": "byName", "options": "Posted Date"},
            "properties": [
              {"id": "custom.width", "value": 180},
              {"id": "unit", "value": "dateTimeAsIso"}
            ]
          },
          {
            "matcher": {"id": "byName", "options": "Bot Name"},
            "properties": [
              {"id": "custom.width", "value": 120}
            ]
          }
        ]
      },
      "options": {
        "showHeader": true,
        "sortBy": [{"desc": true, "displayName": "Posted Date"}],
        "cellHeight": "sm",
        "footer": {
          "show": false,
          "reducer": ["sum"],
          "fields": ""
        }
      },
      "pluginVersion": "9.0.0"
    },
    {
      "id": 17,
      "title": "X/Twitter Activity Analytics",
      "type": "timeseries",
      "datasource": {"type": "postgres", "uid": "supabase"},
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 62},
      "targets": [
        {
          "format": "time_series",
          "rawSql": "-- X/Twitter activity over time for ambassadors\nWITH ambassador_tweets AS (\n  SELECT \n    DATE_TRUNC('day', dm.created_at) AS time,\n    ca.ambassador,\n    COUNT(*) AS tweets\n  FROM community_ambassadors ca\n  INNER JOIN discord_messages dm ON TRUE\n  CROSS JOIN LATERAL jsonb_array_elements(COALESCE(dm.embeds, '[]'::jsonb)) AS embed\n  WHERE ca.x_handle IS NOT NULL\n    AND dm.webhook_id IS NOT NULL\n    AND embed->>'url' LIKE '%x.com%'\n    AND LOWER(\n      SUBSTRING(\n        (embed->'author'->>'name')::text \n        FROM '\\\\(@([A-Za-z0-9_]+)\\\\)'\n      )\n    ) = LOWER(ca.x_handle)\n    AND dm.created_at >= $__timeFrom() \n    AND dm.created_at <= $__timeTo()\n  GROUP BY DATE_TRUNC('day', dm.created_at), ca.ambassador\n)\nSELECT \n  time,\n  ambassador AS metric,\n  tweets AS value\nFROM ambassador_tweets\nORDER BY time, ambassador;",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "barAlignment": 0,
            "lineWidth": 2,
            "fillOpacity": 20,
            "gradientMode": "opacity",
            "spanNulls": false,
            "insertNulls": false,
            "showPoints": "auto",
            "pointSize": 6,
            "stacking": {"mode": "none", "group": "A"}
          },
          "unit": "short"
        }
      },
      "options": {
        "legend": {
          "calcs": ["lastNotNull", "max", "mean", "sum"],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.0.0"
    }
  ],
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": ["5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d"],
    "time_options": ["5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d", "90d"]
  },
  "refresh": "30s",
  "version": 2
}